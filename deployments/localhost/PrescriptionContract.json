{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "prescriptionId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "medIndex",
          "type": "uint256"
        }
      ],
      "name": "AlreadyOrdered",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        }
      ],
      "name": "AlreadyRegistered",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "drugId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "patient",
          "type": "address"
        }
      ],
      "name": "DrugsAlreadyActive",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "name": "InvalidMedIndex",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "name": "InvalidPharmacyId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MismatchLengths",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "NotDoctor",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pharmacy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "prescriptionID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "drugId",
          "type": "uint256"
        }
      ],
      "name": "NotEnoughDrugs",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "NotPatient",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "NotPharmacy",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "NotRegistered",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "prescriptionID",
          "type": "uint256"
        }
      ],
      "name": "PrescriptionAlreadyAccepted",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "prescriptionId",
          "type": "uint256"
        }
      ],
      "name": "PrescriptionAlreadyOrdered",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "prescriptionId",
          "type": "uint256"
        }
      ],
      "name": "PrescriptionNotAccepted",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrescriptionNotForSender",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "prescriptionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "patient",
          "type": "address"
        }
      ],
      "name": "MultiOrderPlaced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "prescriptionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "patient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "pharmacy",
          "type": "address"
        }
      ],
      "name": "OrderPlaced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "prescriptionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "patient",
          "type": "address"
        }
      ],
      "name": "PrescriptionAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "prescriptionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "doctor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "patient",
          "type": "address"
        }
      ],
      "name": "PrescriptionCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum PrescriptionContract.Role",
          "name": "role",
          "type": "uint8"
        }
      ],
      "name": "Registered",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "prescriptionId",
          "type": "uint256"
        }
      ],
      "name": "acceptPrescription",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "activeDrug",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "patient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recommendedPharmacy",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "detailsHash",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "drugId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dosage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "no_days",
              "type": "uint256"
            }
          ],
          "internalType": "struct PrescriptionContract.Medication[]",
          "name": "meds",
          "type": "tuple[]"
        }
      ],
      "name": "createPrescription",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "patient",
          "type": "address"
        }
      ],
      "name": "getActiveDrugsOfPatient",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllPharmacies",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pharmacyAddr",
          "type": "address"
        }
      ],
      "name": "getInventoryForPharmacy",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "drugIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "stocks",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "expirations",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "doctor",
          "type": "address"
        }
      ],
      "name": "getPatientsOfDoctor",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getPharmacyById",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "doctor",
          "type": "address"
        }
      ],
      "name": "getPrescriptionsByDoctor",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "patient",
          "type": "address"
        }
      ],
      "name": "getPrescriptionsByPatient",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getRole",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "inventory",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiration",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isPharmacyRegistered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "prescriptionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "pharmacyAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "orderPrescription",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "prescriptionId",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "pharmacyAddresses",
          "type": "address[]"
        },
        {
          "internalType": "uint256[][]",
          "name": "medIndices",
          "type": "uint256[][]"
        },
        {
          "internalType": "bytes32[]",
          "name": "orderHashes",
          "type": "bytes32[]"
        }
      ],
      "name": "orderPrescriptionMultiPharmacy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pharmacies",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "prescriptionCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "prescriptions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "doctor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "patient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recommendedPharmacy",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "detailsHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "accepted",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "ordered",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registerAsDoctor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registerAsPatient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registerAsPharmaceuticalCompany",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registerAsPharmacy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "roles",
      "outputs": [
        {
          "internalType": "enum PrescriptionContract.Role",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "drugIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "stocks",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "expirations",
          "type": "uint256[]"
        }
      ],
      "name": "setInventory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "drugId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newExpiration",
          "type": "uint256"
        }
      ],
      "name": "updateInventory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pharmacy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "drugId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiration",
          "type": "uint256"
        }
      ],
      "name": "updatePharmacyInventory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x5298c924981f1a3a6103f6af190d871be0858be794591144d6887dbf098c9154",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "3983533",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x244ebee8c70094239b69a370c1452b41c3143b2fafc4719df31157b6c0d7b582",
    "transactionHash": "0x5298c924981f1a3a6103f6af190d871be0858be794591144d6887dbf098c9154",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "3983533",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "3edcc5c3896676035da52efbd76d7d41",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"prescriptionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"medIndex\",\"type\":\"uint256\"}],\"name\":\"AlreadyOrdered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"}],\"name\":\"AlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"drugId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"}],\"name\":\"DrugsAlreadyActive\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"InvalidMedIndex\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"InvalidPharmacyId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MismatchLengths\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"NotDoctor\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pharmacy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"prescriptionID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"drugId\",\"type\":\"uint256\"}],\"name\":\"NotEnoughDrugs\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"NotPatient\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"NotPharmacy\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"NotRegistered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"prescriptionID\",\"type\":\"uint256\"}],\"name\":\"PrescriptionAlreadyAccepted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"prescriptionId\",\"type\":\"uint256\"}],\"name\":\"PrescriptionAlreadyOrdered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"prescriptionId\",\"type\":\"uint256\"}],\"name\":\"PrescriptionNotAccepted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrescriptionNotForSender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"prescriptionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"}],\"name\":\"MultiOrderPlaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"prescriptionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pharmacy\",\"type\":\"address\"}],\"name\":\"OrderPlaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"prescriptionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"}],\"name\":\"PrescriptionAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"prescriptionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"}],\"name\":\"PrescriptionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum PrescriptionContract.Role\",\"name\":\"role\",\"type\":\"uint8\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"prescriptionId\",\"type\":\"uint256\"}],\"name\":\"acceptPrescription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"activeDrug\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recommendedPharmacy\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"detailsHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"drugId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dosage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"no_days\",\"type\":\"uint256\"}],\"internalType\":\"struct PrescriptionContract.Medication[]\",\"name\":\"meds\",\"type\":\"tuple[]\"}],\"name\":\"createPrescription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"}],\"name\":\"getActiveDrugsOfPatient\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPharmacies\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pharmacyAddr\",\"type\":\"address\"}],\"name\":\"getInventoryForPharmacy\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"drugIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"stocks\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"expirations\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"}],\"name\":\"getPatientsOfDoctor\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getPharmacyById\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"}],\"name\":\"getPrescriptionsByDoctor\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"}],\"name\":\"getPrescriptionsByPatient\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getRole\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"inventory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isPharmacyRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"prescriptionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pharmacyAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"orderPrescription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"prescriptionId\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"pharmacyAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"medIndices\",\"type\":\"uint256[][]\"},{\"internalType\":\"bytes32[]\",\"name\":\"orderHashes\",\"type\":\"bytes32[]\"}],\"name\":\"orderPrescriptionMultiPharmacy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pharmacies\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prescriptionCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"prescriptions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recommendedPharmacy\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"detailsHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"accepted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"ordered\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerAsDoctor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerAsPatient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerAsPharmaceuticalCompany\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerAsPharmacy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"roles\",\"outputs\":[{\"internalType\":\"enum PrescriptionContract.Role\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"drugIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"stocks\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"expirations\",\"type\":\"uint256[]\"}],\"name\":\"setInventory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"drugId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newExpiration\",\"type\":\"uint256\"}],\"name\":\"updateInventory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pharmacy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"drugId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"}],\"name\":\"updatePharmacyInventory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"orderPrescriptionMultiPharmacy(uint256,address[],uint256[][],bytes32[])\":{\"params\":{\"medIndices\":\"A 2D array where each sub-array contains indices (in the prescription's medications array) to be ordered from the corresponding pharmacy.\",\"orderHashes\":\"Array of hashes of order details (off-chain) for each pharmacy order.\",\"pharmacyAddresses\":\"Array of pharmacy addresses to order from.\"}},\"setInventory(uint256[],uint256[],uint256[])\":{\"params\":{\"drugIds\":\"- array of drugIds\",\"stocks\":\"- stock for each drugId\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptPrescription(uint256)\":{\"notice\":\"to accept a prescription\"},\"createPrescription(address,address,bytes32,(uint256,uint256,uint256)[])\":{\"notice\":\"create Prescription - Not writing param docs fuck you\"},\"registerAsDoctor()\":{\"notice\":\"All are external\"},\"setInventory(uint256[],uint256[],uint256[])\":{\"notice\":\"initialize the stock of the pharmacy for now\"},\"updateInventory(uint256,uint256,uint256)\":{\"notice\":\"update the inventroy of a stock\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PrescriptionContract.sol\":\"PrescriptionContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PrescriptionContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n// Errors\\r\\nerror NotDoctor(uint256 role, address account);\\r\\nerror NotPatient(uint256 role, address account);\\r\\nerror NotPharmacy(uint256 role, address account);\\r\\nerror AlreadyRegistered(address account, uint256 role);\\r\\nerror MismatchLengths();\\r\\nerror NotRegistered(address account);\\r\\nerror PrescriptionAlreadyAccepted(uint256 prescriptionID);\\r\\nerror PrescriptionNotAccepted(uint prescriptionId);\\r\\nerror PrescriptionNotForSender(address sender, address recipient);\\r\\nerror PrescriptionAlreadyOrdered(uint prescriptionId);\\r\\nerror DrugsAlreadyActive(uint drugId, address patient);\\r\\nerror NotEnoughDrugs(address pharmacy, uint prescriptionID, uint drugId);\\r\\nerror InvalidMedIndex(uint index, uint length);\\r\\nerror AlreadyOrdered(uint prescriptionId, uint medIndex);\\r\\nerror InvalidPharmacyId(uint index, uint length);\\r\\n\\r\\n\\r\\ncontract PrescriptionContract {\\r\\n    \\r\\n    // Defining Roles\\r\\n    enum Role { None, Doctor, Patient, Pharmacy, PharmaceuticalCompany }\\r\\n    mapping(address => Role ) public roles;\\r\\n\\r\\n    //Storing all the pharmacies also fuck you, index is id for pharmacies\\r\\n    address[] public pharmacies;\\r\\n    mapping(address => bool) public isPharmacyRegistered;\\r\\n\\r\\n    // Defining modifiers\\r\\n    modifier onlyDoctor() {\\r\\n        if(roles[msg.sender] != Role.Doctor){\\r\\n            revert NotDoctor({\\r\\n                role: uint256(roles[msg.sender]),\\r\\n                account: msg.sender\\r\\n            });\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlyPatient() {\\r\\n        if(roles[msg.sender] != Role.Patient){\\r\\n            revert NotPatient({\\r\\n                role: uint256(roles[msg.sender]),\\r\\n                account: msg.sender\\r\\n            });\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlyPharmacy() {\\r\\n        if(roles[msg.sender] != Role.Pharmacy){\\r\\n            revert NotPharmacy({\\r\\n                role: uint256(roles[msg.sender]),\\r\\n                account: msg.sender\\r\\n            });\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    //Medication details\\r\\n    struct Medication {\\r\\n        uint drugId;\\r\\n        uint dosage;\\r\\n        uint no_days;\\r\\n    }\\r\\n\\r\\n    //Prescription details\\r\\n    struct Prescription {\\r\\n        uint id;\\r\\n        address doctor;\\r\\n        address patient;\\r\\n        address recommendedPharmacy;\\r\\n        bytes32 detailsHash;\\r\\n        Medication[] medications;\\r\\n        bool[] orderedMedications;\\r\\n        uint timestamp;\\r\\n        bool accepted;\\r\\n        bool ordered;\\r\\n    }\\r\\n\\r\\n    //all Mappings\\r\\n\\r\\n    //Having a counter to get prescription id\\r\\n    uint public prescriptionCounter;\\r\\n    mapping(uint => Prescription) public prescriptions;\\r\\n\\r\\n    //Checking if a patient is under a active drug\\r\\n    mapping(address => mapping(uint => bool)) public activeDrug;\\r\\n    mapping(address => uint[]) private patientActiveDrugs;\\r\\n\\r\\n    //Connecting doctor to patients\\r\\n    mapping(address => address[]) private doctorPatients;\\r\\n\\r\\n    //Track prescriptions for doctor and patient\\r\\n    mapping(address => uint[]) private doctorPrescriptions;\\r\\n    mapping(address => uint[]) private patientPrescriptions;\\r\\n\\r\\n    //Inventory for pharmacies\\r\\n    // mapping(address => mapping(uint => uint)) public inventory;\\r\\n\\r\\n    // adding expiration date to the inventory - brooo so much workkk\\r\\n\\r\\n    // use UNIX format for expiration date please\\r\\n    struct InventoryItem {\\r\\n        uint stock;\\r\\n        uint expiration;\\r\\n    }\\r\\n    mapping(address => mapping(uint => InventoryItem)) public inventory;\\r\\n    mapping(address => uint[]) private pharmacyDrugIds;\\r\\n\\r\\n\\r\\n    //Events for logs and shit\\r\\n\\r\\n    event Registered(address indexed account, Role role);\\r\\n    event PrescriptionCreated(uint indexed prescriptionId, address indexed doctor, address indexed patient);\\r\\n    event PrescriptionAccepted(uint indexed prescriptionId, address indexed patient);\\r\\n    event OrderPlaced(uint indexed prescriptionId, address indexed patient, address indexed pharmacy);\\r\\n    event MultiOrderPlaced(uint indexed prescriptionId, address indexed patient);\\r\\n\\r\\n    // Functions to Register Roles\\r\\n    /// @notice All are external\\r\\n    function registerAsDoctor() external {\\r\\n        if( roles[msg.sender] != Role.None ){\\r\\n            revert AlreadyRegistered(msg.sender, uint256(roles[msg.sender]));\\r\\n        }\\r\\n        roles[msg.sender] = Role.Doctor;\\r\\n        emit Registered(msg.sender, roles[msg.sender]);\\r\\n    }\\r\\n\\r\\n    function registerAsPatient() external {\\r\\n        if( roles[msg.sender] != Role.None ){\\r\\n            revert AlreadyRegistered(msg.sender, uint256(roles[msg.sender]));\\r\\n        }\\r\\n        roles[msg.sender] = Role.Patient;\\r\\n        emit Registered(msg.sender, roles[msg.sender]);\\r\\n    }\\r\\n\\r\\n    function registerAsPharmacy() external {\\r\\n        if( roles[msg.sender] != Role.None ){\\r\\n            revert AlreadyRegistered(msg.sender, uint256(roles[msg.sender]));\\r\\n        }\\r\\n        roles[msg.sender] = Role.Pharmacy;\\r\\n        emit Registered(msg.sender, roles[msg.sender]);\\r\\n        if (!isPharmacyRegistered[msg.sender]) {\\r\\n            pharmacies.push(msg.sender);\\r\\n            isPharmacyRegistered[msg.sender] = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function registerAsPharmaceuticalCompany() external {\\r\\n        if (roles[msg.sender] != Role.None) revert AlreadyRegistered(msg.sender, uint256(roles[msg.sender]));\\r\\n        roles[msg.sender] = Role.PharmaceuticalCompany;\\r\\n        emit Registered(msg.sender, roles[msg.sender]);\\r\\n    }\\r\\n\\r\\n\\r\\n    // Inventory Management\\r\\n\\r\\n    // Another summa function to run some shit\\r\\n    function _addDrugIdForPharmacy(address pharmacyAddr, uint drugId) internal {\\r\\n        uint[] storage drugs = pharmacyDrugIds[pharmacyAddr];\\r\\n        bool exists = false;\\r\\n        for (uint i = 0; i < drugs.length; i++) {\\r\\n            if (drugs[i] == drugId) {\\r\\n                exists = true;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        if (!exists) {\\r\\n            drugs.push(drugId);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /// @notice initialize the stock of the pharmacy for now\\r\\n    /// @param drugIds - array of drugIds\\r\\n    /// @param stocks - stock for each drugId\\r\\n    // adding expiration dates\\r\\n    function setInventory(uint[] calldata drugIds, uint[] calldata stocks, uint[] calldata expirations) external onlyPharmacy {\\r\\n        if(drugIds.length != stocks.length){\\r\\n            revert MismatchLengths();\\r\\n        }\\r\\n        for (uint i=0;i<drugIds.length;i++){\\r\\n            inventory[msg.sender][drugIds[i]] = InventoryItem({\\r\\n                stock: stocks[i],\\r\\n                expiration: expirations[i]\\r\\n            });\\r\\n            _addDrugIdForPharmacy(msg.sender, drugIds[i]);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /// @notice update the inventroy of a stock\\r\\n    // adding expiration dates to this as well\\r\\n    function updateInventory(uint drugId, uint amount, uint newExpiration) external onlyPharmacy {\\r\\n        inventory[msg.sender][drugId].stock += amount;\\r\\n        inventory[msg.sender][drugId].expiration = newExpiration;\\r\\n        _addDrugIdForPharmacy(msg.sender, drugId);\\r\\n    }\\r\\n\\r\\n    function updatePharmacyInventory(address pharmacy, uint drugId, uint amount, uint expiration ) external {\\r\\n        require(roles[msg.sender] == Role.PharmaceuticalCompany, \\\"Unauthorized\\\");\\r\\n        inventory[pharmacy][drugId].stock += amount;\\r\\n        inventory[pharmacy][drugId].expiration = expiration;\\r\\n        _addDrugIdForPharmacy(pharmacy, drugId);\\r\\n    }\\r\\n\\r\\n    // Summa function for adding doctor patient relationship cause lazy to write in big function so made is in different one\\r\\n    function _addDoctorPatient(address doctor, address patient) internal {\\r\\n        bool exists = false;\\r\\n        address[] storage patients = doctorPatients[doctor];\\r\\n        for(uint i=0;i<patients.length;i++){\\r\\n            if(patients[i] == patient){\\r\\n                exists = true;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        if(!exists){\\r\\n            patients.push(patient);\\r\\n        }\\r\\n    }\\r\\n\\r\\n\\r\\n    // Creating Prescription and Verification\\r\\n    \\r\\n    /// @notice create Prescription - Not writing param docs fuck you\\r\\n    function createPrescription(address patient, address recommendedPharmacy, bytes32 detailsHash, Medication[] calldata meds) external onlyDoctor{\\r\\n        if(roles[patient] != Role.Patient){\\r\\n            revert NotRegistered(patient);\\r\\n        }\\r\\n\\r\\n        prescriptionCounter++;\\r\\n        Prescription storage pres = prescriptions[prescriptionCounter];\\r\\n        pres.id = prescriptionCounter;\\r\\n        pres.doctor = msg.sender;\\r\\n        pres.patient = patient;\\r\\n        pres.recommendedPharmacy = recommendedPharmacy;\\r\\n        pres.detailsHash = detailsHash;\\r\\n        pres.timestamp = block.timestamp;\\r\\n        pres.accepted = false;\\r\\n        pres.ordered = false;\\r\\n\\r\\n        for(uint i=0;i<meds.length;i++){\\r\\n            pres.medications.push(meds[i]);\\r\\n            pres.orderedMedications.push(false);\\r\\n        }\\r\\n\\r\\n        doctorPrescriptions[msg.sender].push(prescriptionCounter);\\r\\n        patientPrescriptions[patient].push(prescriptionCounter);\\r\\n        _addDoctorPatient(msg.sender, patient);\\r\\n\\r\\n        emit PrescriptionCreated(prescriptionCounter, msg.sender, patient);\\r\\n    }\\r\\n\\r\\n    /// @notice to accept a prescription\\r\\n    function acceptPrescription(uint prescriptionId) external onlyPatient{\\r\\n        Prescription storage pres = prescriptions[prescriptionId];\\r\\n\\r\\n        if(pres.patient != msg.sender) {\\r\\n            revert PrescriptionNotForSender(pres.patient, msg.sender);\\r\\n        }\\r\\n\\r\\n        if(pres.accepted){\\r\\n            revert PrescriptionAlreadyAccepted(prescriptionId);\\r\\n        }\\r\\n\\r\\n        for(uint i=0;i<pres.medications.length;i++){\\r\\n            uint drugId = pres.medications[i].drugId;\\r\\n            if(activeDrug[msg.sender][drugId]){\\r\\n                revert DrugsAlreadyActive(drugId, msg.sender);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        pres.accepted = true;\\r\\n        for (uint i=0;i<pres.medications.length;i++){\\r\\n            uint drugId = pres.medications[i].drugId;\\r\\n            activeDrug[msg.sender][drugId] = true;\\r\\n            patientActiveDrugs[msg.sender].push(drugId);\\r\\n        }\\r\\n\\r\\n        emit PrescriptionAccepted(prescriptionId, msg.sender);\\r\\n    }\\r\\n\\r\\n    function _removeActiveDrug(address patient, uint drugId) internal{\\r\\n        uint[] storage drugs = patientActiveDrugs[patient];\\r\\n        for(uint i=0;i<drugs.length;i++){\\r\\n            if(drugs[i]==drugId){\\r\\n                drugs[i] = drugs[drugs.length-1];\\r\\n                drugs.pop();\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Ordering a Prescription\\r\\n\\r\\n    function orderPrescription(uint prescriptionId, address pharmacyAddress, bytes32 /* orderHash */) external onlyPatient {\\r\\n        Prescription storage pres = prescriptions[prescriptionId];\\r\\n        if(msg.sender != pres.patient){\\r\\n            revert PrescriptionNotForSender(msg.sender, pres.patient);\\r\\n        }\\r\\n        if(!pres.accepted){\\r\\n            revert PrescriptionNotAccepted(prescriptionId);\\r\\n        }\\r\\n        if(pres.ordered){\\r\\n            revert PrescriptionAlreadyOrdered(prescriptionId);\\r\\n        }\\r\\n        if(roles[pharmacyAddress] != Role.Pharmacy){\\r\\n            revert NotPharmacy(uint(roles[pharmacyAddress]), pharmacyAddress);\\r\\n        }\\r\\n\\r\\n        for(uint i=0;i<pres.medications.length;i++){\\r\\n            uint drugId = pres.medications[i].drugId;\\r\\n            uint requiredAmount = pres.medications[i].dosage * pres.medications[i].no_days;\\r\\n            if(inventory[pharmacyAddress][drugId].stock < requiredAmount){\\r\\n                revert NotEnoughDrugs(pharmacyAddress, prescriptionId, drugId);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        for(uint i=0;i<pres.medications.length;i++){\\r\\n            uint drugId = pres.medications[i].drugId;\\r\\n            uint requiredAmount = pres.medications[i].dosage * pres.medications[i].no_days;\\r\\n            inventory[pharmacyAddress][drugId].stock -= requiredAmount;\\r\\n            activeDrug[msg.sender][drugId] = false;\\r\\n            _removeActiveDrug(msg.sender, drugId);\\r\\n            pres.orderedMedications[i]=true;\\r\\n        }\\r\\n\\r\\n        pres.ordered = true;\\r\\n\\r\\n        emit OrderPlaced(prescriptionId, msg.sender, pharmacyAddress);\\r\\n    }\\r\\n\\r\\n    // function for ordering different drugs from different pharmacies - fuck you for making me write this shit. This shit is too stoopid\\r\\n    // gonna write param docs for this shit cause will be too confusing to understand\\r\\n    /// @param pharmacyAddresses Array of pharmacy addresses to order from.\\r\\n    /// @param medIndices A 2D array where each sub-array contains indices (in the prescription's medications array) to be ordered from the corresponding pharmacy.\\r\\n    /// @param orderHashes Array of hashes of order details (off-chain) for each pharmacy order.\\r\\n    function orderPrescriptionMultiPharmacy(uint prescriptionId, address[] calldata pharmacyAddresses, uint[][] calldata medIndices, bytes32[] calldata orderHashes) external onlyPatient{\\r\\n        Prescription storage pres = prescriptions[prescriptionId];\\r\\n\\r\\n        if(msg.sender != pres.patient){\\r\\n            revert PrescriptionNotForSender(msg.sender, pres.patient);\\r\\n        }\\r\\n\\r\\n        if(!pres.accepted){\\r\\n            revert PrescriptionNotAccepted(prescriptionId);\\r\\n        }\\r\\n\\r\\n        if(pharmacyAddresses.length != medIndices.length || pharmacyAddresses.length != orderHashes.length){\\r\\n            revert MismatchLengths();\\r\\n        }\\r\\n\\r\\n        for (uint i = 0; i < pharmacyAddresses.length; i++) {\\r\\n            address pharmacyAddr = pharmacyAddresses[i];\\r\\n\\r\\n            if(roles[pharmacyAddr] != Role.Pharmacy){\\r\\n                revert NotPharmacy(uint256(roles[pharmacyAddr]), pharmacyAddr);\\r\\n            }\\r\\n\\r\\n            uint[] calldata indices = medIndices[i];\\r\\n            uint presId = prescriptionId;\\r\\n            for (uint j = 0; j < indices.length; j++) {\\r\\n                uint medIndex = indices[j];\\r\\n\\r\\n                if(medIndex >= pres.medications.length) revert InvalidMedIndex(medIndex, pres.medications.length);\\r\\n                if(pres.orderedMedications[medIndex]) revert AlreadyOrdered(prescriptionId, medIndex);\\r\\n\\r\\n                uint drugId = pres.medications[medIndex].drugId;\\r\\n                uint requiredAmount = pres.medications[medIndex].dosage * pres.medications[medIndex].no_days;\\r\\n\\r\\n                if(inventory[pharmacyAddr][drugId].stock < requiredAmount) revert NotEnoughDrugs(pharmacyAddr, presId, drugId);\\r\\n                \\r\\n\\r\\n                inventory[pharmacyAddr][drugId].stock -= requiredAmount;\\r\\n\\r\\n                pres.orderedMedications[medIndex] = true;\\r\\n\\r\\n                activeDrug[msg.sender][drugId] = false;\\r\\n                _removeActiveDrug(msg.sender, drugId);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        emit MultiOrderPlaced(prescriptionId, msg.sender);\\r\\n    }\\r\\n\\r\\n    // Store hash off chain\\r\\n    // Active drugs - add keepers\\r\\n    // drug expiration date - add keeper\\r\\n\\r\\n    // store all pharmacies tick\\r\\n    // different drugs from different pharmacies tick\\r\\n    // all pharmacies tick\\r\\n    // all pharmacies which can satisfy prescription tick\\r\\n    // all patients of a doctor tick\\r\\n    // all prescriptions of patient tick\\r\\n    // all pending prescriptions - not approved / not doing, do this in front end, parse and get nigga\\r\\n    // all pending prescriptions - not ordered / not doing, do this in front end\\r\\n    // all prescriptions of doctor tick\\r\\n    // get all pharmacies tick\\r\\n    // get all pharmacies from id tick\\r\\n    // get inventory from pharmacy tick\\r\\n    // get active drugs tick\\r\\n\\r\\n    // Getter functions\\r\\n    \\r\\n    // All are self explanatory not writing docs\\r\\n\\r\\n    function getAllPharmacies() external view returns (address[] memory) {\\r\\n        return pharmacies;\\r\\n    }\\r\\n\\r\\n    function getPatientsOfDoctor(address doctor) external view returns (address[] memory) {\\r\\n        return doctorPatients[doctor];\\r\\n    }\\r\\n\\r\\n    function getPrescriptionsByDoctor(address doctor) external view returns (uint[] memory) {\\r\\n        return doctorPrescriptions[doctor];\\r\\n    }\\r\\n\\r\\n    function getPrescriptionsByPatient(address patient) external view returns (uint[] memory) {\\r\\n        return patientPrescriptions[patient];\\r\\n    }\\r\\n\\r\\n    function getPharmacyById(uint id) external view returns (address) {\\r\\n        if(id >= pharmacies.length) revert InvalidPharmacyId(id, pharmacies.length);\\r\\n        return pharmacies[id];\\r\\n    }\\r\\n\\r\\n    function getInventoryForPharmacy(address pharmacyAddr) external view returns (uint[] memory drugIds, uint[] memory stocks, uint[] memory expirations) {\\r\\n        uint len = pharmacyDrugIds[pharmacyAddr].length;\\r\\n        drugIds = new uint[](len);\\r\\n        stocks = new uint[](len);\\r\\n        expirations = new uint[](len);\\r\\n        \\r\\n        for (uint i = 0; i < len; i++) {\\r\\n            uint drugId = pharmacyDrugIds[pharmacyAddr][i];\\r\\n            drugIds[i] = drugId;\\r\\n            stocks[i] = inventory[pharmacyAddr][drugId].stock;\\r\\n            expirations[i] = inventory[pharmacyAddr][drugId].expiration;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getActiveDrugsOfPatient(address patient) external view returns (uint[] memory) {\\r\\n        return patientActiveDrugs[patient];\\r\\n    }\\r\\n\\r\\n    function getRole(address account) external view returns(uint256){\\r\\n        return uint256(roles[account]);\\r\\n    }\\r\\n\\r\\n}\",\"keccak256\":\"0xc4fc7e6eb96b5aa0d2e4430c9f58d79c023ad9fcb9c33c0f3ee2d70f4fb018ab\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b506147538061001f6000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80638a5acd73116100de578063aab1d13811610097578063e0acc69811610071578063e0acc698146104af578063f0544ad8146104df578063f068e488146104fb578063f33465e4146105175761018e565b8063aab1d1381461041d578063ca7c36901461044d578063db03f2821461047d5761018e565b80638a5acd731461035d578063988559f51461038d57806399374642146103bd5780639e634a7b146103ed578063a4fd673e146103f7578063a99ad4ee146104135761018e565b806368e5a39c1161014b5780636cb876d0116101255780636cb876d0146102d5578063742ccef0146102df5780637afe24ef1461030f57806382a7fa4a1461033f5761018e565b806368e5a39c1461027e57806368f222fd1461029a5780636ba7fe7f146102cb5761018e565b806331dfc91b1461019357806336cd6114146101ca57806344276733146101e65780635cab3e27146102165780635dd5a6cc146102325780635e228e4c14610262575b600080fd5b6101ad60048036038101906101a891906138c0565b610535565b6040516101c1989796959493929190613971565b60405180910390f35b6101e460048036038101906101df9190613a1b565b6105f7565b005b61020060048036038101906101fb9190613a82565b61077a565b60405161020d9190613aaf565b60405180910390f35b610230600480360381019061022b9190613aca565b6107e1565b005b61024c60048036038101906102479190613a82565b6109c5565b6040516102599190613b1d565b60405180910390f35b61027c60048036038101906102779190613c49565b6109e5565b005b61029860048036038101906102939190613d3e565b61119b565b005b6102b460048036038101906102af9190613d91565b6118c9565b6040516102c2929190613dd1565b60405180910390f35b6102d36118fa565b005b6102dd611b0f565b005b6102f960048036038101906102f49190613a82565b611d24565b6040516103069190613eb8565b60405180910390f35b610329600480360381019061032491906138c0565b611dbb565b6040516103369190613eda565b60405180910390f35b610347611e53565b6040516103549190613aaf565b60405180910390f35b610377600480360381019061037291906138c0565b611e59565b6040516103849190613eda565b60405180910390f35b6103a760048036038101906103a29190613a82565b611e98565b6040516103b49190613eb8565b60405180910390f35b6103d760048036038101906103d29190613a82565b611f2f565b6040516103e49190613f6c565b60405180910390f35b6103f5611f4f565b005b610411600480360381019061040c91906138c0565b612271565b005b61041b612719565b005b61043760048036038101906104329190613d91565b61292e565b6040516104449190613b1d565b60405180910390f35b61046760048036038101906104629190613a82565b61295d565b6040516104749190614045565b60405180910390f35b61049760048036038101906104929190613a82565b612a2a565b6040516104a693929190614067565b60405180910390f35b6104c960048036038101906104c49190613a82565b612cdf565b6040516104d69190613eb8565b60405180910390f35b6104f960048036038101906104f49190614109565b612d76565b005b610515600480360381019061051091906141e7565b613284565b005b61051f6134e4565b60405161052c9190614045565b60405180910390f35b60046020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060070154908060080160009054906101000a900460ff16908060080160019054906101000a900460ff16905088565b60048081111561060a57610609613ef5565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600481111561066857610667613ef5565b5b146106a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069f906142f8565b60405180910390fd5b81600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020600001600082825461070b9190614347565b9250508190555080600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020600101819055506107748484613572565b50505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660048111156107da576107d9613ef5565b5b9050919050565b600360048111156107f5576107f4613ef5565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600481111561085357610852613ef5565b5b146108f4576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660048111156108b6576108b5613ef5565b5b336040517f07ffa9ef0000000000000000000000000000000000000000000000000000000081526004016108eb92919061437b565b60405180910390fd5b81600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060000160008282546109579190614347565b9250508190555080600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020600101819055506109c03384613572565b505050565b60026020528060005260406000206000915054906101000a900460ff1681565b600260048111156109f9576109f8613ef5565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115610a5757610a56613ef5565b5b14610af8576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115610aba57610ab9613ef5565b5b336040517fad852b14000000000000000000000000000000000000000000000000000000008152600401610aef92919061437b565b60405180910390fd5b60006004600089815260200190815260200160002090508060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bc957338160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517f7be3ba3b000000000000000000000000000000000000000000000000000000008152600401610bc09291906143a4565b60405180910390fd5b8060080160009054906101000a900460ff16610c1c57876040517f87c89179000000000000000000000000000000000000000000000000000000008152600401610c139190613aaf565b60405180910390fd5b8484905087879050141580610c375750828290508787905014155b15610c6e576040517f8f6c6f4800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8787905081101561114c576000888883818110610c9157610c906143cd565b5b9050602002016020810190610ca69190613a82565b905060036004811115610cbc57610cbb613ef5565b5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115610d1a57610d19613ef5565b5b14610dbb576000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115610d7d57610d7c613ef5565b5b816040517f07ffa9ef000000000000000000000000000000000000000000000000000000008152600401610db292919061437b565b60405180910390fd5b366000888885818110610dd157610dd06143cd565b5b9050602002810190610de3919061440b565b9150915060008c905060005b8383905081101561113a576000848483818110610e0f57610e0e6143cd565b5b90506020020135905087600501805490508110610e6c578088600501805490506040517f51bd95c4000000000000000000000000000000000000000000000000000000008152600401610e63929190613dd1565b60405180910390fd5b876006018181548110610e8257610e816143cd565b5b90600052602060002090602091828204019190069054906101000a900460ff1615610ee6578e816040517f085da392000000000000000000000000000000000000000000000000000000008152600401610edd929190613dd1565b60405180910390fd5b6000886005018281548110610efe57610efd6143cd565b5b90600052602060002090600302016000015490506000896005018381548110610f2a57610f296143cd565b5b9060005260206000209060030201600201548a6005018481548110610f5257610f516143cd565b5b906000526020600020906003020160010154610f6e919061446e565b905080600a60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060000154101561100c578785836040517ffe5bd782000000000000000000000000000000000000000000000000000000008152600401611003939291906144b0565b60405180910390fd5b80600a60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020600001600082825461106f91906144e7565b9250508190555060018a600601848154811061108e5761108d6143cd565b5b90600052602060002090602091828204019190066101000a81548160ff0219169083151502179055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060006101000a81548160ff02191690831515021790555061112a3383613634565b5050508080600101915050610def565b50505050508080600101915050610c71565b503373ffffffffffffffffffffffffffffffffffffffff16887f62a40242259c3f2ceecd6e9e95c6aa192ea71b07ceb8cf5185512385c99d617260405160405180910390a35050505050505050565b600260048111156111af576111ae613ef5565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600481111561120d5761120c613ef5565b5b146112ae576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660048111156112705761126f613ef5565b5b336040517fad852b140000000000000000000000000000000000000000000000000000000081526004016112a592919061437b565b60405180910390fd5b60006004600085815260200190815260200160002090508060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461137f57338160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517f7be3ba3b0000000000000000000000000000000000000000000000000000000081526004016113769291906143a4565b60405180910390fd5b8060080160009054906101000a900460ff166113d257836040517f87c891790000000000000000000000000000000000000000000000000000000081526004016113c99190613aaf565b60405180910390fd5b8060080160019054906101000a900460ff161561142657836040517f7cb7406800000000000000000000000000000000000000000000000000000000815260040161141d9190613aaf565b60405180910390fd5b6003600481111561143a57611439613ef5565b5b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600481111561149857611497613ef5565b5b14611539576000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660048111156114fb576114fa613ef5565b5b836040517f07ffa9ef00000000000000000000000000000000000000000000000000000000815260040161153092919061437b565b60405180910390fd5b60005b8160050180549050811015611680576000826005018281548110611563576115626143cd565b5b9060005260206000209060030201600001549050600083600501838154811061158f5761158e6143cd565b5b9060005260206000209060030201600201548460050184815481106115b7576115b66143cd565b5b9060005260206000209060030201600101546115d3919061446e565b905080600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020600001541015611671578587836040517ffe5bd782000000000000000000000000000000000000000000000000000000008152600401611668939291906144b0565b60405180910390fd5b5050808060010191505061153c565b5060005b816005018054905081101561184a5760008260050182815481106116ab576116aa6143cd565b5b906000526020600020906003020160000154905060008360050183815481106116d7576116d66143cd565b5b9060005260206000209060030201600201548460050184815481106116ff576116fe6143cd565b5b90600052602060002090600302016001015461171b919061446e565b905080600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020600001600082825461178091906144e7565b925050819055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060006101000a81548160ff0219169083151502179055506117fa3383613634565b6001846006018481548110611812576118116143cd565b5b90600052602060002090602091828204019190066101000a81548160ff02191690831515021790555050508080600101915050611684565b5060018160080160016101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16857f4230a4fc42ebf80b234f0270f890fd6facf785b69f172b976895e3ba6aeb286660405160405180910390a450505050565b600a602052816000526040600020602052806000526040600020600091509150508060000154908060010154905082565b6000600481111561190e5761190d613ef5565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600481111561196c5761196b613ef5565b5b14611a0d57336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660048111156119d0576119cf613ef5565b5b6040517f4baa5977000000000000000000000000000000000000000000000000000000008152600401611a0492919061451b565b60405180910390fd5b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690836004811115611a6f57611a6e613ef5565b5b02179055503373ffffffffffffffffffffffffffffffffffffffff167f89b4e995568c900aa52376cbed225dc1a013c9a43cb58186d69676ff593d7c4e6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16604051611b059190613f6c565b60405180910390a2565b60006004811115611b2357611b22613ef5565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115611b8157611b80613ef5565b5b14611c2257336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115611be557611be4613ef5565b5b6040517f4baa5977000000000000000000000000000000000000000000000000000000008152600401611c1992919061451b565b60405180910390fd5b60046000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690836004811115611c8457611c83613ef5565b5b02179055503373ffffffffffffffffffffffffffffffffffffffff167f89b4e995568c900aa52376cbed225dc1a013c9a43cb58186d69676ff593d7c4e6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16604051611d1a9190613f6c565b60405180910390a2565b6060600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611daf57602002820191906000526020600020905b815481526020019060010190808311611d9b575b50505050509050919050565b60006001805490508210611e0d57816001805490506040517f2b87a07f000000000000000000000000000000000000000000000000000000008152600401611e04929190613dd1565b60405180910390fd5b60018281548110611e2157611e206143cd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60035481565b60018181548110611e6957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611f2357602002820191906000526020600020905b815481526020019060010190808311611f0f575b50505050509050919050565b60006020528060005260406000206000915054906101000a900460ff1681565b60006004811115611f6357611f62613ef5565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115611fc157611fc0613ef5565b5b1461206257336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600481111561202557612024613ef5565b5b6040517f4baa597700000000000000000000000000000000000000000000000000000000815260040161205992919061451b565b60405180910390fd5b60036000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360048111156120c4576120c3613ef5565b5b02179055503373ffffffffffffffffffffffffffffffffffffffff167f89b4e995568c900aa52376cbed225dc1a013c9a43cb58186d69676ff593d7c4e6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660405161215a9190613f6c565b60405180910390a2600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661226f576001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b565b6002600481111561228557612284613ef5565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660048111156122e3576122e2613ef5565b5b14612384576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600481111561234657612345613ef5565b5b336040517fad852b1400000000000000000000000000000000000000000000000000000000815260040161237b92919061437b565b60405180910390fd5b60006004600083815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612455578060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336040517f7be3ba3b00000000000000000000000000000000000000000000000000000000815260040161244c9291906143a4565b60405180910390fd5b8060080160009054906101000a900460ff16156124a957816040517fbd2622a30000000000000000000000000000000000000000000000000000000081526004016124a09190613aaf565b60405180910390fd5b60005b81600501805490508110156125975760008260050182815481106124d3576124d26143cd565b5b9060005260206000209060030201600001549050600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060009054906101000a900460ff16156125895780336040517f748a746000000000000000000000000000000000000000000000000000000000815260040161258092919061437b565b60405180910390fd5b5080806001019150506124ac565b5060018160080160006101000a81548160ff02191690831515021790555060005b81600501805490508110156126d05760008260050182815481106125df576125de6143cd565b5b90600052602060002090600302016000015490506001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff021916908315150217905550600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150555080806001019150506125b8565b503373ffffffffffffffffffffffffffffffffffffffff16827fde00084ab0cfbed100269c33cd062c3e925f6d8867dd7c9bd62b795c2ebbd67060405160405180910390a35050565b6000600481111561272d5761272c613ef5565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600481111561278b5761278a613ef5565b5b1461282c57336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660048111156127ef576127ee613ef5565b5b6040517f4baa597700000000000000000000000000000000000000000000000000000000815260040161282392919061451b565b60405180910390fd5b60026000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083600481111561288e5761288d613ef5565b5b02179055503373ffffffffffffffffffffffffffffffffffffffff167f89b4e995568c900aa52376cbed225dc1a013c9a43cb58186d69676ff593d7c4e6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166040516129249190613f6c565b60405180910390a2565b60056020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6060600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015612a1e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116129d4575b50505050509050919050565b60608060606000600b60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905090508067ffffffffffffffff811115612a9057612a8f614544565b5b604051908082528060200260200182016040528015612abe5781602001602082028036833780820191505090505b5093508067ffffffffffffffff811115612adb57612ada614544565b5b604051908082528060200260200182016040528015612b095781602001602082028036833780820191505090505b5092508067ffffffffffffffff811115612b2657612b25614544565b5b604051908082528060200260200182016040528015612b545781602001602082028036833780820191505090505b50915060005b81811015612cd6576000600b60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110612bb557612bb46143cd565b5b9060005260206000200154905080868381518110612bd657612bd56143cd565b5b602002602001018181525050600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060000154858381518110612c4957612c486143cd565b5b602002602001018181525050600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060010154848381518110612cbc57612cbb6143cd565b5b602002602001018181525050508080600101915050612b5a565b50509193909250565b6060600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015612d6a57602002820191906000526020600020905b815481526020019060010190808311612d56575b50505050509050919050565b60016004811115612d8a57612d89613ef5565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115612de857612de7613ef5565b5b14612e89576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115612e4b57612e4a613ef5565b5b336040517f027a40b0000000000000000000000000000000000000000000000000000000008152600401612e8092919061437b565b60405180910390fd5b60026004811115612e9d57612e9c613ef5565b5b6000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115612efb57612efa613ef5565b5b14612f3d57846040517fbfc6c337000000000000000000000000000000000000000000000000000000008152600401612f349190613eda565b60405180910390fd5b60036000815480929190612f5090614573565b9190505550600060046000600354815260200190815260200160002090506003548160000181905550338160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550858160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083816004018190555042816007018190555060008160080160006101000a81548160ff02191690831515021790555060008160080160016101000a81548160ff02191690831515021790555060005b8383905081101561314457816005018484838181106130b3576130b26143cd565b5b905060600201908060018154018082558091505060019003906000526020600020906003020160009091909190915081816130ee91906146e0565b505081600601600090806001815401808255809150506001900390600052602060002090602091828204019190069091909190916101000a81548160ff0219169083151502179055508080600101915050613091565b50600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003549080600181540180825580915050600190039060005260206000200160009091909190915055600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600354908060018154018082558091505060019003906000526020600020016000909190919091505561321f3387613738565b8573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff166003547f71d940cbfc82410e0b18e63896ef651239da8c4875128cfa30d1637278d0267060405160405180910390a4505050505050565b6003600481111561329857613297613ef5565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660048111156132f6576132f5613ef5565b5b14613397576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600481111561335957613358613ef5565b5b336040517f07ffa9ef00000000000000000000000000000000000000000000000000000000815260040161338e92919061437b565b60405180910390fd5b8383905086869050146133d6576040517f8f6c6f4800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b868690508110156134db576040518060400160405280868684818110613402576134016143cd565b5b905060200201358152602001848484818110613421576134206143cd565b5b90506020020135815250600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600089898581811061347f5761347e6143cd565b5b90506020020135815260200190815260200160002060008201518160000155602082015181600101559050506134ce338888848181106134c2576134c16143cd565b5b90506020020135613572565b80806001019150506133d9565b50505050505050565b6060600180548060200260200160405190810160405280929190818152602001828054801561356857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161351e575b5050505050905090565b6000600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000805b82805490508110156135ff57838382815481106135d9576135d86143cd565b5b9060005260206000200154036135f257600191506135ff565b80806001019150506135b9565b508061362e57818390806001815401808255809150506001900390600052602060002001600090919091909150555b50505050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060005b8180549050811015613732578282828154811061369a576136996143cd565b5b9060005260206000200154036137255781600183805490506136bc91906144e7565b815481106136cd576136cc6143cd565b5b90600052602060002001548282815481106136eb576136ea6143cd565b5b90600052602060002001819055508180548061370a576137096146ee565b5b60019003818190600052602060002001600090559055613732565b808060010191505061367a565b50505050565b600080600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060005b8180549050811015613811578373ffffffffffffffffffffffffffffffffffffffff168282815481106137b5576137b46143cd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036138045760019250613811565b808060010191505061377f565b508161387a5780839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50505050565b600080fd5b600080fd5b6000819050919050565b61389d8161388a565b81146138a857600080fd5b50565b6000813590506138ba81613894565b92915050565b6000602082840312156138d6576138d5613880565b5b60006138e4848285016138ab565b91505092915050565b6138f68161388a565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000613927826138fc565b9050919050565b6139378161391c565b82525050565b6000819050919050565b6139508161393d565b82525050565b60008115159050919050565b61396b81613956565b82525050565b600061010082019050613987600083018b6138ed565b613994602083018a61392e565b6139a1604083018961392e565b6139ae606083018861392e565b6139bb6080830187613947565b6139c860a08301866138ed565b6139d560c0830185613962565b6139e260e0830184613962565b9998505050505050505050565b6139f88161391c565b8114613a0357600080fd5b50565b600081359050613a15816139ef565b92915050565b60008060008060808587031215613a3557613a34613880565b5b6000613a4387828801613a06565b9450506020613a54878288016138ab565b9350506040613a65878288016138ab565b9250506060613a76878288016138ab565b91505092959194509250565b600060208284031215613a9857613a97613880565b5b6000613aa684828501613a06565b91505092915050565b6000602082019050613ac460008301846138ed565b92915050565b600080600060608486031215613ae357613ae2613880565b5b6000613af1868287016138ab565b9350506020613b02868287016138ab565b9250506040613b13868287016138ab565b9150509250925092565b6000602082019050613b326000830184613962565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112613b5d57613b5c613b38565b5b8235905067ffffffffffffffff811115613b7a57613b79613b3d565b5b602083019150836020820283011115613b9657613b95613b42565b5b9250929050565b60008083601f840112613bb357613bb2613b38565b5b8235905067ffffffffffffffff811115613bd057613bcf613b3d565b5b602083019150836020820283011115613bec57613beb613b42565b5b9250929050565b60008083601f840112613c0957613c08613b38565b5b8235905067ffffffffffffffff811115613c2657613c25613b3d565b5b602083019150836020820283011115613c4257613c41613b42565b5b9250929050565b60008060008060008060006080888a031215613c6857613c67613880565b5b6000613c768a828b016138ab565b975050602088013567ffffffffffffffff811115613c9757613c96613885565b5b613ca38a828b01613b47565b9650965050604088013567ffffffffffffffff811115613cc657613cc5613885565b5b613cd28a828b01613b9d565b9450945050606088013567ffffffffffffffff811115613cf557613cf4613885565b5b613d018a828b01613bf3565b925092505092959891949750929550565b613d1b8161393d565b8114613d2657600080fd5b50565b600081359050613d3881613d12565b92915050565b600080600060608486031215613d5757613d56613880565b5b6000613d65868287016138ab565b9350506020613d7686828701613a06565b9250506040613d8786828701613d29565b9150509250925092565b60008060408385031215613da857613da7613880565b5b6000613db685828601613a06565b9250506020613dc7858286016138ab565b9150509250929050565b6000604082019050613de660008301856138ed565b613df360208301846138ed565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b613e2f8161388a565b82525050565b6000613e418383613e26565b60208301905092915050565b6000602082019050919050565b6000613e6582613dfa565b613e6f8185613e05565b9350613e7a83613e16565b8060005b83811015613eab578151613e928882613e35565b9750613e9d83613e4d565b925050600181019050613e7e565b5085935050505092915050565b60006020820190508181036000830152613ed28184613e5a565b905092915050565b6000602082019050613eef600083018461392e565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60058110613f3557613f34613ef5565b5b50565b6000819050613f4682613f24565b919050565b6000613f5682613f38565b9050919050565b613f6681613f4b565b82525050565b6000602082019050613f816000830184613f5d565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b613fbc8161391c565b82525050565b6000613fce8383613fb3565b60208301905092915050565b6000602082019050919050565b6000613ff282613f87565b613ffc8185613f92565b935061400783613fa3565b8060005b8381101561403857815161401f8882613fc2565b975061402a83613fda565b92505060018101905061400b565b5085935050505092915050565b6000602082019050818103600083015261405f8184613fe7565b905092915050565b600060608201905081810360008301526140818186613e5a565b905081810360208301526140958185613e5a565b905081810360408301526140a98184613e5a565b9050949350505050565b60008083601f8401126140c9576140c8613b38565b5b8235905067ffffffffffffffff8111156140e6576140e5613b3d565b5b60208301915083606082028301111561410257614101613b42565b5b9250929050565b60008060008060006080868803121561412557614124613880565b5b600061413388828901613a06565b955050602061414488828901613a06565b945050604061415588828901613d29565b935050606086013567ffffffffffffffff81111561417657614175613885565b5b614182888289016140b3565b92509250509295509295909350565b60008083601f8401126141a7576141a6613b38565b5b8235905067ffffffffffffffff8111156141c4576141c3613b3d565b5b6020830191508360208202830111156141e0576141df613b42565b5b9250929050565b6000806000806000806060878903121561420457614203613880565b5b600087013567ffffffffffffffff81111561422257614221613885565b5b61422e89828a01614191565b9650965050602087013567ffffffffffffffff81111561425157614250613885565b5b61425d89828a01614191565b9450945050604087013567ffffffffffffffff8111156142805761427f613885565b5b61428c89828a01614191565b92509250509295509295509295565b600082825260208201905092915050565b7f556e617574686f72697a65640000000000000000000000000000000000000000600082015250565b60006142e2600c8361429b565b91506142ed826142ac565b602082019050919050565b60006020820190508181036000830152614311816142d5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006143528261388a565b915061435d8361388a565b925082820190508082111561437557614374614318565b5b92915050565b600060408201905061439060008301856138ed565b61439d602083018461392e565b9392505050565b60006040820190506143b9600083018561392e565b6143c6602083018461392e565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112614428576144276143fc565b5b80840192508235915067ffffffffffffffff82111561444a57614449614401565b5b60208301925060208202360383131561446657614465614406565b5b509250929050565b60006144798261388a565b91506144848361388a565b92508282026144928161388a565b915082820484148315176144a9576144a8614318565b5b5092915050565b60006060820190506144c5600083018661392e565b6144d260208301856138ed565b6144df60408301846138ed565b949350505050565b60006144f28261388a565b91506144fd8361388a565b925082820390508181111561451557614514614318565b5b92915050565b6000604082019050614530600083018561392e565b61453d60208301846138ed565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600061457e8261388a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036145b0576145af614318565b5b600182019050919050565b600081356145c881613894565b80915050919050565b60008160001b9050919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61460a846145d1565b9350801983169250808416831791505092915050565b6000819050919050565b600061464561464061463b8461388a565b614620565b61388a565b9050919050565b6000819050919050565b61465f8261462a565b61467261466b8261464c565b83546145de565b8255505050565b60008101600083018061468b816145bb565b90506146978184614656565b5050506001810160208301806146ac816145bb565b90506146b88184614656565b5050506002810160408301806146cd816145bb565b90506146d98184614656565b5050505050565b6146ea8282614679565b5050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212207e528943fe6465a07ede2ca8755d2e3bd3e3c33815b927ee31ebdc08578da15f64736f6c634300081c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061018e5760003560e01c80638a5acd73116100de578063aab1d13811610097578063e0acc69811610071578063e0acc698146104af578063f0544ad8146104df578063f068e488146104fb578063f33465e4146105175761018e565b8063aab1d1381461041d578063ca7c36901461044d578063db03f2821461047d5761018e565b80638a5acd731461035d578063988559f51461038d57806399374642146103bd5780639e634a7b146103ed578063a4fd673e146103f7578063a99ad4ee146104135761018e565b806368e5a39c1161014b5780636cb876d0116101255780636cb876d0146102d5578063742ccef0146102df5780637afe24ef1461030f57806382a7fa4a1461033f5761018e565b806368e5a39c1461027e57806368f222fd1461029a5780636ba7fe7f146102cb5761018e565b806331dfc91b1461019357806336cd6114146101ca57806344276733146101e65780635cab3e27146102165780635dd5a6cc146102325780635e228e4c14610262575b600080fd5b6101ad60048036038101906101a891906138c0565b610535565b6040516101c1989796959493929190613971565b60405180910390f35b6101e460048036038101906101df9190613a1b565b6105f7565b005b61020060048036038101906101fb9190613a82565b61077a565b60405161020d9190613aaf565b60405180910390f35b610230600480360381019061022b9190613aca565b6107e1565b005b61024c60048036038101906102479190613a82565b6109c5565b6040516102599190613b1d565b60405180910390f35b61027c60048036038101906102779190613c49565b6109e5565b005b61029860048036038101906102939190613d3e565b61119b565b005b6102b460048036038101906102af9190613d91565b6118c9565b6040516102c2929190613dd1565b60405180910390f35b6102d36118fa565b005b6102dd611b0f565b005b6102f960048036038101906102f49190613a82565b611d24565b6040516103069190613eb8565b60405180910390f35b610329600480360381019061032491906138c0565b611dbb565b6040516103369190613eda565b60405180910390f35b610347611e53565b6040516103549190613aaf565b60405180910390f35b610377600480360381019061037291906138c0565b611e59565b6040516103849190613eda565b60405180910390f35b6103a760048036038101906103a29190613a82565b611e98565b6040516103b49190613eb8565b60405180910390f35b6103d760048036038101906103d29190613a82565b611f2f565b6040516103e49190613f6c565b60405180910390f35b6103f5611f4f565b005b610411600480360381019061040c91906138c0565b612271565b005b61041b612719565b005b61043760048036038101906104329190613d91565b61292e565b6040516104449190613b1d565b60405180910390f35b61046760048036038101906104629190613a82565b61295d565b6040516104749190614045565b60405180910390f35b61049760048036038101906104929190613a82565b612a2a565b6040516104a693929190614067565b60405180910390f35b6104c960048036038101906104c49190613a82565b612cdf565b6040516104d69190613eb8565b60405180910390f35b6104f960048036038101906104f49190614109565b612d76565b005b610515600480360381019061051091906141e7565b613284565b005b61051f6134e4565b60405161052c9190614045565b60405180910390f35b60046020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060070154908060080160009054906101000a900460ff16908060080160019054906101000a900460ff16905088565b60048081111561060a57610609613ef5565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600481111561066857610667613ef5565b5b146106a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069f906142f8565b60405180910390fd5b81600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020600001600082825461070b9190614347565b9250508190555080600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020600101819055506107748484613572565b50505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660048111156107da576107d9613ef5565b5b9050919050565b600360048111156107f5576107f4613ef5565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600481111561085357610852613ef5565b5b146108f4576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660048111156108b6576108b5613ef5565b5b336040517f07ffa9ef0000000000000000000000000000000000000000000000000000000081526004016108eb92919061437b565b60405180910390fd5b81600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060000160008282546109579190614347565b9250508190555080600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020600101819055506109c03384613572565b505050565b60026020528060005260406000206000915054906101000a900460ff1681565b600260048111156109f9576109f8613ef5565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115610a5757610a56613ef5565b5b14610af8576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115610aba57610ab9613ef5565b5b336040517fad852b14000000000000000000000000000000000000000000000000000000008152600401610aef92919061437b565b60405180910390fd5b60006004600089815260200190815260200160002090508060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bc957338160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517f7be3ba3b000000000000000000000000000000000000000000000000000000008152600401610bc09291906143a4565b60405180910390fd5b8060080160009054906101000a900460ff16610c1c57876040517f87c89179000000000000000000000000000000000000000000000000000000008152600401610c139190613aaf565b60405180910390fd5b8484905087879050141580610c375750828290508787905014155b15610c6e576040517f8f6c6f4800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8787905081101561114c576000888883818110610c9157610c906143cd565b5b9050602002016020810190610ca69190613a82565b905060036004811115610cbc57610cbb613ef5565b5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115610d1a57610d19613ef5565b5b14610dbb576000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115610d7d57610d7c613ef5565b5b816040517f07ffa9ef000000000000000000000000000000000000000000000000000000008152600401610db292919061437b565b60405180910390fd5b366000888885818110610dd157610dd06143cd565b5b9050602002810190610de3919061440b565b9150915060008c905060005b8383905081101561113a576000848483818110610e0f57610e0e6143cd565b5b90506020020135905087600501805490508110610e6c578088600501805490506040517f51bd95c4000000000000000000000000000000000000000000000000000000008152600401610e63929190613dd1565b60405180910390fd5b876006018181548110610e8257610e816143cd565b5b90600052602060002090602091828204019190069054906101000a900460ff1615610ee6578e816040517f085da392000000000000000000000000000000000000000000000000000000008152600401610edd929190613dd1565b60405180910390fd5b6000886005018281548110610efe57610efd6143cd565b5b90600052602060002090600302016000015490506000896005018381548110610f2a57610f296143cd565b5b9060005260206000209060030201600201548a6005018481548110610f5257610f516143cd565b5b906000526020600020906003020160010154610f6e919061446e565b905080600a60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060000154101561100c578785836040517ffe5bd782000000000000000000000000000000000000000000000000000000008152600401611003939291906144b0565b60405180910390fd5b80600a60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020600001600082825461106f91906144e7565b9250508190555060018a600601848154811061108e5761108d6143cd565b5b90600052602060002090602091828204019190066101000a81548160ff0219169083151502179055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060006101000a81548160ff02191690831515021790555061112a3383613634565b5050508080600101915050610def565b50505050508080600101915050610c71565b503373ffffffffffffffffffffffffffffffffffffffff16887f62a40242259c3f2ceecd6e9e95c6aa192ea71b07ceb8cf5185512385c99d617260405160405180910390a35050505050505050565b600260048111156111af576111ae613ef5565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600481111561120d5761120c613ef5565b5b146112ae576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660048111156112705761126f613ef5565b5b336040517fad852b140000000000000000000000000000000000000000000000000000000081526004016112a592919061437b565b60405180910390fd5b60006004600085815260200190815260200160002090508060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461137f57338160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517f7be3ba3b0000000000000000000000000000000000000000000000000000000081526004016113769291906143a4565b60405180910390fd5b8060080160009054906101000a900460ff166113d257836040517f87c891790000000000000000000000000000000000000000000000000000000081526004016113c99190613aaf565b60405180910390fd5b8060080160019054906101000a900460ff161561142657836040517f7cb7406800000000000000000000000000000000000000000000000000000000815260040161141d9190613aaf565b60405180910390fd5b6003600481111561143a57611439613ef5565b5b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600481111561149857611497613ef5565b5b14611539576000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660048111156114fb576114fa613ef5565b5b836040517f07ffa9ef00000000000000000000000000000000000000000000000000000000815260040161153092919061437b565b60405180910390fd5b60005b8160050180549050811015611680576000826005018281548110611563576115626143cd565b5b9060005260206000209060030201600001549050600083600501838154811061158f5761158e6143cd565b5b9060005260206000209060030201600201548460050184815481106115b7576115b66143cd565b5b9060005260206000209060030201600101546115d3919061446e565b905080600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020600001541015611671578587836040517ffe5bd782000000000000000000000000000000000000000000000000000000008152600401611668939291906144b0565b60405180910390fd5b5050808060010191505061153c565b5060005b816005018054905081101561184a5760008260050182815481106116ab576116aa6143cd565b5b906000526020600020906003020160000154905060008360050183815481106116d7576116d66143cd565b5b9060005260206000209060030201600201548460050184815481106116ff576116fe6143cd565b5b90600052602060002090600302016001015461171b919061446e565b905080600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020600001600082825461178091906144e7565b925050819055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060006101000a81548160ff0219169083151502179055506117fa3383613634565b6001846006018481548110611812576118116143cd565b5b90600052602060002090602091828204019190066101000a81548160ff02191690831515021790555050508080600101915050611684565b5060018160080160016101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16857f4230a4fc42ebf80b234f0270f890fd6facf785b69f172b976895e3ba6aeb286660405160405180910390a450505050565b600a602052816000526040600020602052806000526040600020600091509150508060000154908060010154905082565b6000600481111561190e5761190d613ef5565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600481111561196c5761196b613ef5565b5b14611a0d57336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660048111156119d0576119cf613ef5565b5b6040517f4baa5977000000000000000000000000000000000000000000000000000000008152600401611a0492919061451b565b60405180910390fd5b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690836004811115611a6f57611a6e613ef5565b5b02179055503373ffffffffffffffffffffffffffffffffffffffff167f89b4e995568c900aa52376cbed225dc1a013c9a43cb58186d69676ff593d7c4e6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16604051611b059190613f6c565b60405180910390a2565b60006004811115611b2357611b22613ef5565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115611b8157611b80613ef5565b5b14611c2257336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115611be557611be4613ef5565b5b6040517f4baa5977000000000000000000000000000000000000000000000000000000008152600401611c1992919061451b565b60405180910390fd5b60046000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690836004811115611c8457611c83613ef5565b5b02179055503373ffffffffffffffffffffffffffffffffffffffff167f89b4e995568c900aa52376cbed225dc1a013c9a43cb58186d69676ff593d7c4e6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16604051611d1a9190613f6c565b60405180910390a2565b6060600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611daf57602002820191906000526020600020905b815481526020019060010190808311611d9b575b50505050509050919050565b60006001805490508210611e0d57816001805490506040517f2b87a07f000000000000000000000000000000000000000000000000000000008152600401611e04929190613dd1565b60405180910390fd5b60018281548110611e2157611e206143cd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60035481565b60018181548110611e6957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611f2357602002820191906000526020600020905b815481526020019060010190808311611f0f575b50505050509050919050565b60006020528060005260406000206000915054906101000a900460ff1681565b60006004811115611f6357611f62613ef5565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115611fc157611fc0613ef5565b5b1461206257336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600481111561202557612024613ef5565b5b6040517f4baa597700000000000000000000000000000000000000000000000000000000815260040161205992919061451b565b60405180910390fd5b60036000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360048111156120c4576120c3613ef5565b5b02179055503373ffffffffffffffffffffffffffffffffffffffff167f89b4e995568c900aa52376cbed225dc1a013c9a43cb58186d69676ff593d7c4e6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660405161215a9190613f6c565b60405180910390a2600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661226f576001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b565b6002600481111561228557612284613ef5565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660048111156122e3576122e2613ef5565b5b14612384576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600481111561234657612345613ef5565b5b336040517fad852b1400000000000000000000000000000000000000000000000000000000815260040161237b92919061437b565b60405180910390fd5b60006004600083815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612455578060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336040517f7be3ba3b00000000000000000000000000000000000000000000000000000000815260040161244c9291906143a4565b60405180910390fd5b8060080160009054906101000a900460ff16156124a957816040517fbd2622a30000000000000000000000000000000000000000000000000000000081526004016124a09190613aaf565b60405180910390fd5b60005b81600501805490508110156125975760008260050182815481106124d3576124d26143cd565b5b9060005260206000209060030201600001549050600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060009054906101000a900460ff16156125895780336040517f748a746000000000000000000000000000000000000000000000000000000000815260040161258092919061437b565b60405180910390fd5b5080806001019150506124ac565b5060018160080160006101000a81548160ff02191690831515021790555060005b81600501805490508110156126d05760008260050182815481106125df576125de6143cd565b5b90600052602060002090600302016000015490506001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff021916908315150217905550600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150555080806001019150506125b8565b503373ffffffffffffffffffffffffffffffffffffffff16827fde00084ab0cfbed100269c33cd062c3e925f6d8867dd7c9bd62b795c2ebbd67060405160405180910390a35050565b6000600481111561272d5761272c613ef5565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600481111561278b5761278a613ef5565b5b1461282c57336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660048111156127ef576127ee613ef5565b5b6040517f4baa597700000000000000000000000000000000000000000000000000000000815260040161282392919061451b565b60405180910390fd5b60026000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083600481111561288e5761288d613ef5565b5b02179055503373ffffffffffffffffffffffffffffffffffffffff167f89b4e995568c900aa52376cbed225dc1a013c9a43cb58186d69676ff593d7c4e6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166040516129249190613f6c565b60405180910390a2565b60056020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6060600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015612a1e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116129d4575b50505050509050919050565b60608060606000600b60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905090508067ffffffffffffffff811115612a9057612a8f614544565b5b604051908082528060200260200182016040528015612abe5781602001602082028036833780820191505090505b5093508067ffffffffffffffff811115612adb57612ada614544565b5b604051908082528060200260200182016040528015612b095781602001602082028036833780820191505090505b5092508067ffffffffffffffff811115612b2657612b25614544565b5b604051908082528060200260200182016040528015612b545781602001602082028036833780820191505090505b50915060005b81811015612cd6576000600b60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110612bb557612bb46143cd565b5b9060005260206000200154905080868381518110612bd657612bd56143cd565b5b602002602001018181525050600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060000154858381518110612c4957612c486143cd565b5b602002602001018181525050600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060010154848381518110612cbc57612cbb6143cd565b5b602002602001018181525050508080600101915050612b5a565b50509193909250565b6060600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015612d6a57602002820191906000526020600020905b815481526020019060010190808311612d56575b50505050509050919050565b60016004811115612d8a57612d89613ef5565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115612de857612de7613ef5565b5b14612e89576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115612e4b57612e4a613ef5565b5b336040517f027a40b0000000000000000000000000000000000000000000000000000000008152600401612e8092919061437b565b60405180910390fd5b60026004811115612e9d57612e9c613ef5565b5b6000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115612efb57612efa613ef5565b5b14612f3d57846040517fbfc6c337000000000000000000000000000000000000000000000000000000008152600401612f349190613eda565b60405180910390fd5b60036000815480929190612f5090614573565b9190505550600060046000600354815260200190815260200160002090506003548160000181905550338160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550858160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083816004018190555042816007018190555060008160080160006101000a81548160ff02191690831515021790555060008160080160016101000a81548160ff02191690831515021790555060005b8383905081101561314457816005018484838181106130b3576130b26143cd565b5b905060600201908060018154018082558091505060019003906000526020600020906003020160009091909190915081816130ee91906146e0565b505081600601600090806001815401808255809150506001900390600052602060002090602091828204019190069091909190916101000a81548160ff0219169083151502179055508080600101915050613091565b50600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003549080600181540180825580915050600190039060005260206000200160009091909190915055600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600354908060018154018082558091505060019003906000526020600020016000909190919091505561321f3387613738565b8573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff166003547f71d940cbfc82410e0b18e63896ef651239da8c4875128cfa30d1637278d0267060405160405180910390a4505050505050565b6003600481111561329857613297613ef5565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660048111156132f6576132f5613ef5565b5b14613397576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600481111561335957613358613ef5565b5b336040517f07ffa9ef00000000000000000000000000000000000000000000000000000000815260040161338e92919061437b565b60405180910390fd5b8383905086869050146133d6576040517f8f6c6f4800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b868690508110156134db576040518060400160405280868684818110613402576134016143cd565b5b905060200201358152602001848484818110613421576134206143cd565b5b90506020020135815250600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600089898581811061347f5761347e6143cd565b5b90506020020135815260200190815260200160002060008201518160000155602082015181600101559050506134ce338888848181106134c2576134c16143cd565b5b90506020020135613572565b80806001019150506133d9565b50505050505050565b6060600180548060200260200160405190810160405280929190818152602001828054801561356857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161351e575b5050505050905090565b6000600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000805b82805490508110156135ff57838382815481106135d9576135d86143cd565b5b9060005260206000200154036135f257600191506135ff565b80806001019150506135b9565b508061362e57818390806001815401808255809150506001900390600052602060002001600090919091909150555b50505050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060005b8180549050811015613732578282828154811061369a576136996143cd565b5b9060005260206000200154036137255781600183805490506136bc91906144e7565b815481106136cd576136cc6143cd565b5b90600052602060002001548282815481106136eb576136ea6143cd565b5b90600052602060002001819055508180548061370a576137096146ee565b5b60019003818190600052602060002001600090559055613732565b808060010191505061367a565b50505050565b600080600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060005b8180549050811015613811578373ffffffffffffffffffffffffffffffffffffffff168282815481106137b5576137b46143cd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036138045760019250613811565b808060010191505061377f565b508161387a5780839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50505050565b600080fd5b600080fd5b6000819050919050565b61389d8161388a565b81146138a857600080fd5b50565b6000813590506138ba81613894565b92915050565b6000602082840312156138d6576138d5613880565b5b60006138e4848285016138ab565b91505092915050565b6138f68161388a565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000613927826138fc565b9050919050565b6139378161391c565b82525050565b6000819050919050565b6139508161393d565b82525050565b60008115159050919050565b61396b81613956565b82525050565b600061010082019050613987600083018b6138ed565b613994602083018a61392e565b6139a1604083018961392e565b6139ae606083018861392e565b6139bb6080830187613947565b6139c860a08301866138ed565b6139d560c0830185613962565b6139e260e0830184613962565b9998505050505050505050565b6139f88161391c565b8114613a0357600080fd5b50565b600081359050613a15816139ef565b92915050565b60008060008060808587031215613a3557613a34613880565b5b6000613a4387828801613a06565b9450506020613a54878288016138ab565b9350506040613a65878288016138ab565b9250506060613a76878288016138ab565b91505092959194509250565b600060208284031215613a9857613a97613880565b5b6000613aa684828501613a06565b91505092915050565b6000602082019050613ac460008301846138ed565b92915050565b600080600060608486031215613ae357613ae2613880565b5b6000613af1868287016138ab565b9350506020613b02868287016138ab565b9250506040613b13868287016138ab565b9150509250925092565b6000602082019050613b326000830184613962565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112613b5d57613b5c613b38565b5b8235905067ffffffffffffffff811115613b7a57613b79613b3d565b5b602083019150836020820283011115613b9657613b95613b42565b5b9250929050565b60008083601f840112613bb357613bb2613b38565b5b8235905067ffffffffffffffff811115613bd057613bcf613b3d565b5b602083019150836020820283011115613bec57613beb613b42565b5b9250929050565b60008083601f840112613c0957613c08613b38565b5b8235905067ffffffffffffffff811115613c2657613c25613b3d565b5b602083019150836020820283011115613c4257613c41613b42565b5b9250929050565b60008060008060008060006080888a031215613c6857613c67613880565b5b6000613c768a828b016138ab565b975050602088013567ffffffffffffffff811115613c9757613c96613885565b5b613ca38a828b01613b47565b9650965050604088013567ffffffffffffffff811115613cc657613cc5613885565b5b613cd28a828b01613b9d565b9450945050606088013567ffffffffffffffff811115613cf557613cf4613885565b5b613d018a828b01613bf3565b925092505092959891949750929550565b613d1b8161393d565b8114613d2657600080fd5b50565b600081359050613d3881613d12565b92915050565b600080600060608486031215613d5757613d56613880565b5b6000613d65868287016138ab565b9350506020613d7686828701613a06565b9250506040613d8786828701613d29565b9150509250925092565b60008060408385031215613da857613da7613880565b5b6000613db685828601613a06565b9250506020613dc7858286016138ab565b9150509250929050565b6000604082019050613de660008301856138ed565b613df360208301846138ed565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b613e2f8161388a565b82525050565b6000613e418383613e26565b60208301905092915050565b6000602082019050919050565b6000613e6582613dfa565b613e6f8185613e05565b9350613e7a83613e16565b8060005b83811015613eab578151613e928882613e35565b9750613e9d83613e4d565b925050600181019050613e7e565b5085935050505092915050565b60006020820190508181036000830152613ed28184613e5a565b905092915050565b6000602082019050613eef600083018461392e565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60058110613f3557613f34613ef5565b5b50565b6000819050613f4682613f24565b919050565b6000613f5682613f38565b9050919050565b613f6681613f4b565b82525050565b6000602082019050613f816000830184613f5d565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b613fbc8161391c565b82525050565b6000613fce8383613fb3565b60208301905092915050565b6000602082019050919050565b6000613ff282613f87565b613ffc8185613f92565b935061400783613fa3565b8060005b8381101561403857815161401f8882613fc2565b975061402a83613fda565b92505060018101905061400b565b5085935050505092915050565b6000602082019050818103600083015261405f8184613fe7565b905092915050565b600060608201905081810360008301526140818186613e5a565b905081810360208301526140958185613e5a565b905081810360408301526140a98184613e5a565b9050949350505050565b60008083601f8401126140c9576140c8613b38565b5b8235905067ffffffffffffffff8111156140e6576140e5613b3d565b5b60208301915083606082028301111561410257614101613b42565b5b9250929050565b60008060008060006080868803121561412557614124613880565b5b600061413388828901613a06565b955050602061414488828901613a06565b945050604061415588828901613d29565b935050606086013567ffffffffffffffff81111561417657614175613885565b5b614182888289016140b3565b92509250509295509295909350565b60008083601f8401126141a7576141a6613b38565b5b8235905067ffffffffffffffff8111156141c4576141c3613b3d565b5b6020830191508360208202830111156141e0576141df613b42565b5b9250929050565b6000806000806000806060878903121561420457614203613880565b5b600087013567ffffffffffffffff81111561422257614221613885565b5b61422e89828a01614191565b9650965050602087013567ffffffffffffffff81111561425157614250613885565b5b61425d89828a01614191565b9450945050604087013567ffffffffffffffff8111156142805761427f613885565b5b61428c89828a01614191565b92509250509295509295509295565b600082825260208201905092915050565b7f556e617574686f72697a65640000000000000000000000000000000000000000600082015250565b60006142e2600c8361429b565b91506142ed826142ac565b602082019050919050565b60006020820190508181036000830152614311816142d5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006143528261388a565b915061435d8361388a565b925082820190508082111561437557614374614318565b5b92915050565b600060408201905061439060008301856138ed565b61439d602083018461392e565b9392505050565b60006040820190506143b9600083018561392e565b6143c6602083018461392e565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112614428576144276143fc565b5b80840192508235915067ffffffffffffffff82111561444a57614449614401565b5b60208301925060208202360383131561446657614465614406565b5b509250929050565b60006144798261388a565b91506144848361388a565b92508282026144928161388a565b915082820484148315176144a9576144a8614318565b5b5092915050565b60006060820190506144c5600083018661392e565b6144d260208301856138ed565b6144df60408301846138ed565b949350505050565b60006144f28261388a565b91506144fd8361388a565b925082820390508181111561451557614514614318565b5b92915050565b6000604082019050614530600083018561392e565b61453d60208301846138ed565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600061457e8261388a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036145b0576145af614318565b5b600182019050919050565b600081356145c881613894565b80915050919050565b60008160001b9050919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61460a846145d1565b9350801983169250808416831791505092915050565b6000819050919050565b600061464561464061463b8461388a565b614620565b61388a565b9050919050565b6000819050919050565b61465f8261462a565b61467261466b8261464c565b83546145de565b8255505050565b60008101600083018061468b816145bb565b90506146978184614656565b5050506001810160208301806146ac816145bb565b90506146b88184614656565b5050506002810160408301806146cd816145bb565b90506146d98184614656565b5050505050565b6146ea8282614679565b5050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212207e528943fe6465a07ede2ca8755d2e3bd3e3c33815b927ee31ebdc08578da15f64736f6c634300081c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "orderPrescriptionMultiPharmacy(uint256,address[],uint256[][],bytes32[])": {
        "params": {
          "medIndices": "A 2D array where each sub-array contains indices (in the prescription's medications array) to be ordered from the corresponding pharmacy.",
          "orderHashes": "Array of hashes of order details (off-chain) for each pharmacy order.",
          "pharmacyAddresses": "Array of pharmacy addresses to order from."
        }
      },
      "setInventory(uint256[],uint256[],uint256[])": {
        "params": {
          "drugIds": "- array of drugIds",
          "stocks": "- stock for each drugId"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "acceptPrescription(uint256)": {
        "notice": "to accept a prescription"
      },
      "createPrescription(address,address,bytes32,(uint256,uint256,uint256)[])": {
        "notice": "create Prescription - Not writing param docs fuck you"
      },
      "registerAsDoctor()": {
        "notice": "All are external"
      },
      "setInventory(uint256[],uint256[],uint256[])": {
        "notice": "initialize the stock of the pharmacy for now"
      },
      "updateInventory(uint256,uint256,uint256)": {
        "notice": "update the inventroy of a stock"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 6134,
        "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
        "label": "roles",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_enum(Role)6129)"
      },
      {
        "astId": 6137,
        "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
        "label": "pharmacies",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 6141,
        "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
        "label": "isPharmacyRegistered",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 6249,
        "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
        "label": "prescriptionCounter",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 6254,
        "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
        "label": "prescriptions",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_struct(Prescription)6247_storage)"
      },
      {
        "astId": 6260,
        "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
        "label": "activeDrug",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
      },
      {
        "astId": 6265,
        "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
        "label": "patientActiveDrugs",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 6270,
        "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
        "label": "doctorPatients",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 6275,
        "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
        "label": "doctorPrescriptions",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 6280,
        "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
        "label": "patientPrescriptions",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 6292,
        "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
        "label": "inventory",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(InventoryItem)6285_storage))"
      },
      {
        "astId": 6297,
        "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
        "label": "pharmacyDrugIds",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bool)dyn_storage": {
        "base": "t_bool",
        "encoding": "dynamic_array",
        "label": "bool[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Medication)6223_storage)dyn_storage": {
        "base": "t_struct(Medication)6223_storage",
        "encoding": "dynamic_array",
        "label": "struct PrescriptionContract.Medication[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_enum(Role)6129": {
        "encoding": "inplace",
        "label": "enum PrescriptionContract.Role",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_enum(Role)6129)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => enum PrescriptionContract.Role)",
        "numberOfBytes": "32",
        "value": "t_enum(Role)6129"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_bool)"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_struct(InventoryItem)6285_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct PrescriptionContract.InventoryItem))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(InventoryItem)6285_storage)"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(InventoryItem)6285_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct PrescriptionContract.InventoryItem)",
        "numberOfBytes": "32",
        "value": "t_struct(InventoryItem)6285_storage"
      },
      "t_mapping(t_uint256,t_struct(Prescription)6247_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct PrescriptionContract.Prescription)",
        "numberOfBytes": "32",
        "value": "t_struct(Prescription)6247_storage"
      },
      "t_struct(InventoryItem)6285_storage": {
        "encoding": "inplace",
        "label": "struct PrescriptionContract.InventoryItem",
        "members": [
          {
            "astId": 6282,
            "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
            "label": "stock",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 6284,
            "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
            "label": "expiration",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Medication)6223_storage": {
        "encoding": "inplace",
        "label": "struct PrescriptionContract.Medication",
        "members": [
          {
            "astId": 6218,
            "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
            "label": "drugId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 6220,
            "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
            "label": "dosage",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 6222,
            "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
            "label": "no_days",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Prescription)6247_storage": {
        "encoding": "inplace",
        "label": "struct PrescriptionContract.Prescription",
        "members": [
          {
            "astId": 6225,
            "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 6227,
            "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
            "label": "doctor",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 6229,
            "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
            "label": "patient",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 6231,
            "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
            "label": "recommendedPharmacy",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 6233,
            "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
            "label": "detailsHash",
            "offset": 0,
            "slot": "4",
            "type": "t_bytes32"
          },
          {
            "astId": 6237,
            "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
            "label": "medications",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_struct(Medication)6223_storage)dyn_storage"
          },
          {
            "astId": 6240,
            "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
            "label": "orderedMedications",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_bool)dyn_storage"
          },
          {
            "astId": 6242,
            "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
            "label": "timestamp",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 6244,
            "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
            "label": "accepted",
            "offset": 0,
            "slot": "8",
            "type": "t_bool"
          },
          {
            "astId": 6246,
            "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
            "label": "ordered",
            "offset": 1,
            "slot": "8",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}