{
  "address": "0x3003b415291baC06699df1b9b23158301f4C792A",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "prescriptionId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "medIndex",
          "type": "uint256"
        }
      ],
      "name": "AlreadyOrdered",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        }
      ],
      "name": "AlreadyRegistered",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "drugId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "patient",
          "type": "address"
        }
      ],
      "name": "DrugsAlreadyActive",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "name": "InvalidMedIndex",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "name": "InvalidPharmacyId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MismatchLengths",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "NotDoctor",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pharmacy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "prescriptionID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "drugId",
          "type": "uint256"
        }
      ],
      "name": "NotEnoughDrugs",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "NotPatient",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "NotPharmacy",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "NotRegistered",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "prescriptionID",
          "type": "uint256"
        }
      ],
      "name": "PrescriptionAlreadyAccepted",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "prescriptionId",
          "type": "uint256"
        }
      ],
      "name": "PrescriptionAlreadyOrdered",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "prescriptionId",
          "type": "uint256"
        }
      ],
      "name": "PrescriptionNotAccepted",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrescriptionNotForSender",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "prescriptionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "patient",
          "type": "address"
        }
      ],
      "name": "MultiOrderPlaced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "prescriptionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "patient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "pharmacy",
          "type": "address"
        }
      ],
      "name": "OrderPlaced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "prescriptionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "patient",
          "type": "address"
        }
      ],
      "name": "PrescriptionAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "prescriptionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "doctor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "patient",
          "type": "address"
        }
      ],
      "name": "PrescriptionCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum PrescriptionContract.Role",
          "name": "role",
          "type": "uint8"
        }
      ],
      "name": "Registered",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "prescriptionId",
          "type": "uint256"
        }
      ],
      "name": "acceptPrescription",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "activeDrug",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "patient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recommendedPharmacy",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "detailsHash",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "drugId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dosage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "no_days",
              "type": "uint256"
            }
          ],
          "internalType": "struct PrescriptionContract.Medication[]",
          "name": "meds",
          "type": "tuple[]"
        }
      ],
      "name": "createPrescription",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "patient",
          "type": "address"
        }
      ],
      "name": "getActiveDrugsOfPatient",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllPharmacies",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pharmacyAddr",
          "type": "address"
        }
      ],
      "name": "getInventoryForPharmacy",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "drugIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "stocks",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "expirations",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "doctor",
          "type": "address"
        }
      ],
      "name": "getPatientsOfDoctor",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getPharmacyById",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "doctor",
          "type": "address"
        }
      ],
      "name": "getPrescriptionsByDoctor",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "patient",
          "type": "address"
        }
      ],
      "name": "getPrescriptionsByPatient",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "inventory",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiration",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isPharmacyRegistered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "prescriptionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "pharmacyAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "orderPrescription",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "prescriptionId",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "pharmacyAddresses",
          "type": "address[]"
        },
        {
          "internalType": "uint256[][]",
          "name": "medIndices",
          "type": "uint256[][]"
        },
        {
          "internalType": "bytes32[]",
          "name": "orderHashes",
          "type": "bytes32[]"
        }
      ],
      "name": "orderPrescriptionMultiPharmacy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pharmacies",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "prescriptionCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "prescriptions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "doctor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "patient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recommendedPharmacy",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "detailsHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "accepted",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "ordered",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registerAsDoctor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registerAsPatient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registerAsPharmaceuticalCompany",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registerAsPharmacy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "roles",
      "outputs": [
        {
          "internalType": "enum PrescriptionContract.Role",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "drugIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "stocks",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "expirations",
          "type": "uint256[]"
        }
      ],
      "name": "setInventory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "drugId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newExpiration",
          "type": "uint256"
        }
      ],
      "name": "updateInventory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pharmacy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "drugId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiration",
          "type": "uint256"
        }
      ],
      "name": "updatePharmacyInventory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x767550e231c0c3cbbcf28a4e2b9dddd242ecdf3a6be076578a9d5bd55ac106cb",
  "receipt": {
    "to": null,
    "from": "0xaF440A508c70406DdDc9c66B1163b1b7aF60D720",
    "contractAddress": "0x3003b415291baC06699df1b9b23158301f4C792A",
    "transactionIndex": 42,
    "gasUsed": "3945080",
    "logsBloom": "0x
    "blockHash": "0xea36a22fbdfda880577d8165a82d6db19207fcc7056c23fe0d32eb5966463461",
    "transactionHash": "0x767550e231c0c3cbbcf28a4e2b9dddd242ecdf3a6be076578a9d5bd55ac106cb",
    "logs": [],
    "blockNumber": 7846050,
    "cumulativeGasUsed": "7055311",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "7eee7bfbbe7b06239c47b4341fa6a028",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"prescriptionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"medIndex\",\"type\":\"uint256\"}],\"name\":\"AlreadyOrdered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"}],\"name\":\"AlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"drugId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"}],\"name\":\"DrugsAlreadyActive\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"InvalidMedIndex\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"InvalidPharmacyId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MismatchLengths\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"NotDoctor\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pharmacy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"prescriptionID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"drugId\",\"type\":\"uint256\"}],\"name\":\"NotEnoughDrugs\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"NotPatient\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"NotPharmacy\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"NotRegistered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"prescriptionID\",\"type\":\"uint256\"}],\"name\":\"PrescriptionAlreadyAccepted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"prescriptionId\",\"type\":\"uint256\"}],\"name\":\"PrescriptionAlreadyOrdered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"prescriptionId\",\"type\":\"uint256\"}],\"name\":\"PrescriptionNotAccepted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrescriptionNotForSender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"prescriptionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"}],\"name\":\"MultiOrderPlaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"prescriptionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pharmacy\",\"type\":\"address\"}],\"name\":\"OrderPlaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"prescriptionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"}],\"name\":\"PrescriptionAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"prescriptionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"}],\"name\":\"PrescriptionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum PrescriptionContract.Role\",\"name\":\"role\",\"type\":\"uint8\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"prescriptionId\",\"type\":\"uint256\"}],\"name\":\"acceptPrescription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"activeDrug\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recommendedPharmacy\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"detailsHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"drugId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dosage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"no_days\",\"type\":\"uint256\"}],\"internalType\":\"struct PrescriptionContract.Medication[]\",\"name\":\"meds\",\"type\":\"tuple[]\"}],\"name\":\"createPrescription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"}],\"name\":\"getActiveDrugsOfPatient\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPharmacies\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pharmacyAddr\",\"type\":\"address\"}],\"name\":\"getInventoryForPharmacy\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"drugIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"stocks\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"expirations\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"}],\"name\":\"getPatientsOfDoctor\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getPharmacyById\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"}],\"name\":\"getPrescriptionsByDoctor\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"}],\"name\":\"getPrescriptionsByPatient\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"inventory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isPharmacyRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"prescriptionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pharmacyAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"orderPrescription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"prescriptionId\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"pharmacyAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"medIndices\",\"type\":\"uint256[][]\"},{\"internalType\":\"bytes32[]\",\"name\":\"orderHashes\",\"type\":\"bytes32[]\"}],\"name\":\"orderPrescriptionMultiPharmacy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pharmacies\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prescriptionCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"prescriptions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recommendedPharmacy\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"detailsHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"accepted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"ordered\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerAsDoctor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerAsPatient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerAsPharmaceuticalCompany\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerAsPharmacy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"roles\",\"outputs\":[{\"internalType\":\"enum PrescriptionContract.Role\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"drugIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"stocks\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"expirations\",\"type\":\"uint256[]\"}],\"name\":\"setInventory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"drugId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newExpiration\",\"type\":\"uint256\"}],\"name\":\"updateInventory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pharmacy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"drugId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"}],\"name\":\"updatePharmacyInventory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"orderPrescriptionMultiPharmacy(uint256,address[],uint256[][],bytes32[])\":{\"params\":{\"medIndices\":\"A 2D array where each sub-array contains indices (in the prescription's medications array) to be ordered from the corresponding pharmacy.\",\"orderHashes\":\"Array of hashes of order details (off-chain) for each pharmacy order.\",\"pharmacyAddresses\":\"Array of pharmacy addresses to order from.\"}},\"setInventory(uint256[],uint256[],uint256[])\":{\"params\":{\"drugIds\":\"- array of drugIds\",\"stocks\":\"- stock for each drugId\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptPrescription(uint256)\":{\"notice\":\"to accept a prescription\"},\"createPrescription(address,address,bytes32,(uint256,uint256,uint256)[])\":{\"notice\":\"create Prescription - Not writing param docs fuck you\"},\"registerAsDoctor()\":{\"notice\":\"All are external\"},\"setInventory(uint256[],uint256[],uint256[])\":{\"notice\":\"initialize the stock of the pharmacy for now\"},\"updateInventory(uint256,uint256,uint256)\":{\"notice\":\"update the inventroy of a stock\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PrescriptionContract.sol\":\"PrescriptionContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PrescriptionContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n// Errors\\r\\nerror NotDoctor(uint256 role, address account);\\r\\nerror NotPatient(uint256 role, address account);\\r\\nerror NotPharmacy(uint256 role, address account);\\r\\nerror AlreadyRegistered(address account, uint256 role);\\r\\nerror MismatchLengths();\\r\\nerror NotRegistered(address account);\\r\\nerror PrescriptionAlreadyAccepted(uint256 prescriptionID);\\r\\nerror PrescriptionNotAccepted(uint prescriptionId);\\r\\nerror PrescriptionNotForSender(address sender, address recipient);\\r\\nerror PrescriptionAlreadyOrdered(uint prescriptionId);\\r\\nerror DrugsAlreadyActive(uint drugId, address patient);\\r\\nerror NotEnoughDrugs(address pharmacy, uint prescriptionID, uint drugId);\\r\\nerror InvalidMedIndex(uint index, uint length);\\r\\nerror AlreadyOrdered(uint prescriptionId, uint medIndex);\\r\\nerror InvalidPharmacyId(uint index, uint length);\\r\\n\\r\\n\\r\\ncontract PrescriptionContract {\\r\\n    \\r\\n    // Defining Roles\\r\\n    enum Role { None, Doctor, Patient, Pharmacy, PharmaceuticalCompany }\\r\\n    mapping(address => Role ) public roles;\\r\\n\\r\\n    //Storing all the pharmacies also fuck you, index is id for pharmacies\\r\\n    address[] public pharmacies;\\r\\n    mapping(address => bool) public isPharmacyRegistered;\\r\\n\\r\\n    // Defining modifiers\\r\\n    modifier onlyDoctor() {\\r\\n        if(roles[msg.sender] != Role.Doctor){\\r\\n            revert NotDoctor({\\r\\n                role: uint256(roles[msg.sender]),\\r\\n                account: msg.sender\\r\\n            });\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlyPatient() {\\r\\n        if(roles[msg.sender] != Role.Patient){\\r\\n            revert NotPatient({\\r\\n                role: uint256(roles[msg.sender]),\\r\\n                account: msg.sender\\r\\n            });\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlyPharmacy() {\\r\\n        if(roles[msg.sender] != Role.Pharmacy){\\r\\n            revert NotPharmacy({\\r\\n                role: uint256(roles[msg.sender]),\\r\\n                account: msg.sender\\r\\n            });\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    //Medication details\\r\\n    struct Medication {\\r\\n        uint drugId;\\r\\n        uint dosage;\\r\\n        uint no_days;\\r\\n    }\\r\\n\\r\\n    //Prescription details\\r\\n    struct Prescription {\\r\\n        uint id;\\r\\n        address doctor;\\r\\n        address patient;\\r\\n        address recommendedPharmacy;\\r\\n        bytes32 detailsHash;\\r\\n        Medication[] medications;\\r\\n        bool[] orderedMedications;\\r\\n        uint timestamp;\\r\\n        bool accepted;\\r\\n        bool ordered;\\r\\n    }\\r\\n\\r\\n    //all Mappings\\r\\n\\r\\n    //Having a counter to get prescription id\\r\\n    uint public prescriptionCounter;\\r\\n    mapping(uint => Prescription) public prescriptions;\\r\\n\\r\\n    //Checking if a patient is under a active drug\\r\\n    mapping(address => mapping(uint => bool)) public activeDrug;\\r\\n    mapping(address => uint[]) private patientActiveDrugs;\\r\\n\\r\\n    //Connecting doctor to patients\\r\\n    mapping(address => address[]) private doctorPatients;\\r\\n\\r\\n    //Track prescriptions for doctor and patient\\r\\n    mapping(address => uint[]) private doctorPrescriptions;\\r\\n    mapping(address => uint[]) private patientPrescriptions;\\r\\n\\r\\n    //Inventory for pharmacies\\r\\n    // mapping(address => mapping(uint => uint)) public inventory;\\r\\n\\r\\n    // adding expiration date to the inventory - brooo so much workkk\\r\\n\\r\\n    // use UNIX format for expiration date please\\r\\n    struct InventoryItem {\\r\\n        uint stock;\\r\\n        uint expiration;\\r\\n    }\\r\\n    mapping(address => mapping(uint => InventoryItem)) public inventory;\\r\\n    mapping(address => uint[]) private pharmacyDrugIds;\\r\\n\\r\\n\\r\\n    //Events for logs and shit\\r\\n\\r\\n    event Registered(address indexed account, Role role);\\r\\n    event PrescriptionCreated(uint indexed prescriptionId, address indexed doctor, address indexed patient);\\r\\n    event PrescriptionAccepted(uint indexed prescriptionId, address indexed patient);\\r\\n    event OrderPlaced(uint indexed prescriptionId, address indexed patient, address indexed pharmacy);\\r\\n    event MultiOrderPlaced(uint indexed prescriptionId, address indexed patient);\\r\\n\\r\\n    // Functions to Register Roles\\r\\n    /// @notice All are external\\r\\n    function registerAsDoctor() external {\\r\\n        if( roles[msg.sender] != Role.None ){\\r\\n            revert AlreadyRegistered(msg.sender, uint256(roles[msg.sender]));\\r\\n        }\\r\\n        roles[msg.sender] = Role.Doctor;\\r\\n        emit Registered(msg.sender, roles[msg.sender]);\\r\\n    }\\r\\n\\r\\n    function registerAsPatient() external {\\r\\n        if( roles[msg.sender] != Role.None ){\\r\\n            revert AlreadyRegistered(msg.sender, uint256(roles[msg.sender]));\\r\\n        }\\r\\n        roles[msg.sender] = Role.Patient;\\r\\n        emit Registered(msg.sender, roles[msg.sender]);\\r\\n    }\\r\\n\\r\\n    function registerAsPharmacy() external {\\r\\n        if( roles[msg.sender] != Role.None ){\\r\\n            revert AlreadyRegistered(msg.sender, uint256(roles[msg.sender]));\\r\\n        }\\r\\n        roles[msg.sender] = Role.Pharmacy;\\r\\n        emit Registered(msg.sender, roles[msg.sender]);\\r\\n        if (!isPharmacyRegistered[msg.sender]) {\\r\\n            pharmacies.push(msg.sender);\\r\\n            isPharmacyRegistered[msg.sender] = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function registerAsPharmaceuticalCompany() external {\\r\\n        if (roles[msg.sender] != Role.None) revert AlreadyRegistered(msg.sender, uint256(roles[msg.sender]));\\r\\n        roles[msg.sender] = Role.PharmaceuticalCompany;\\r\\n        emit Registered(msg.sender, roles[msg.sender]);\\r\\n    }\\r\\n\\r\\n\\r\\n    // Inventory Management\\r\\n\\r\\n    // Another summa function to run some shit\\r\\n    function _addDrugIdForPharmacy(address pharmacyAddr, uint drugId) internal {\\r\\n        uint[] storage drugs = pharmacyDrugIds[pharmacyAddr];\\r\\n        bool exists = false;\\r\\n        for (uint i = 0; i < drugs.length; i++) {\\r\\n            if (drugs[i] == drugId) {\\r\\n                exists = true;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        if (!exists) {\\r\\n            drugs.push(drugId);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /// @notice initialize the stock of the pharmacy for now\\r\\n    /// @param drugIds - array of drugIds\\r\\n    /// @param stocks - stock for each drugId\\r\\n    // adding expiration dates\\r\\n    function setInventory(uint[] calldata drugIds, uint[] calldata stocks, uint[] calldata expirations) external onlyPharmacy {\\r\\n        if(drugIds.length != stocks.length){\\r\\n            revert MismatchLengths();\\r\\n        }\\r\\n        for (uint i=0;i<drugIds.length;i++){\\r\\n            inventory[msg.sender][drugIds[i]] = InventoryItem({\\r\\n                stock: stocks[i],\\r\\n                expiration: expirations[i]\\r\\n            });\\r\\n            _addDrugIdForPharmacy(msg.sender, drugIds[i]);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /// @notice update the inventroy of a stock\\r\\n    // adding expiration dates to this as well\\r\\n    function updateInventory(uint drugId, uint amount, uint newExpiration) external onlyPharmacy {\\r\\n        inventory[msg.sender][drugId].stock += amount;\\r\\n        inventory[msg.sender][drugId].expiration = newExpiration;\\r\\n        _addDrugIdForPharmacy(msg.sender, drugId);\\r\\n    }\\r\\n\\r\\n    function updatePharmacyInventory(address pharmacy, uint drugId, uint amount, uint expiration ) external {\\r\\n        require(roles[msg.sender] == Role.PharmaceuticalCompany, \\\"Unauthorized\\\");\\r\\n        inventory[pharmacy][drugId].stock += amount;\\r\\n        inventory[pharmacy][drugId].expiration = expiration;\\r\\n        _addDrugIdForPharmacy(pharmacy, drugId);\\r\\n    }\\r\\n\\r\\n    // Summa function for adding doctor patient relationship cause lazy to write in big function so made is in different one\\r\\n    function _addDoctorPatient(address doctor, address patient) internal {\\r\\n        bool exists = false;\\r\\n        address[] storage patients = doctorPatients[doctor];\\r\\n        for(uint i=0;i<patients.length;i++){\\r\\n            if(patients[i] == patient){\\r\\n                exists = true;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        if(!exists){\\r\\n            patients.push(patient);\\r\\n        }\\r\\n    }\\r\\n\\r\\n\\r\\n    // Creating Prescription and Verification\\r\\n    \\r\\n    /// @notice create Prescription - Not writing param docs fuck you\\r\\n    function createPrescription(address patient, address recommendedPharmacy, bytes32 detailsHash, Medication[] calldata meds) external onlyDoctor{\\r\\n        if(roles[patient] != Role.Patient){\\r\\n            revert NotRegistered(patient);\\r\\n        }\\r\\n\\r\\n        prescriptionCounter++;\\r\\n        Prescription storage pres = prescriptions[prescriptionCounter];\\r\\n        pres.id = prescriptionCounter;\\r\\n        pres.doctor = msg.sender;\\r\\n        pres.patient = patient;\\r\\n        pres.recommendedPharmacy = recommendedPharmacy;\\r\\n        pres.detailsHash = detailsHash;\\r\\n        pres.timestamp = block.timestamp;\\r\\n        pres.accepted = false;\\r\\n        pres.ordered = false;\\r\\n\\r\\n        for(uint i=0;i<meds.length;i++){\\r\\n            pres.medications.push(meds[i]);\\r\\n            pres.orderedMedications.push(false);\\r\\n        }\\r\\n\\r\\n        doctorPrescriptions[msg.sender].push(prescriptionCounter);\\r\\n        patientPrescriptions[patient].push(prescriptionCounter);\\r\\n        _addDoctorPatient(msg.sender, patient);\\r\\n\\r\\n        emit PrescriptionCreated(prescriptionCounter, msg.sender, patient);\\r\\n    }\\r\\n\\r\\n    /// @notice to accept a prescription\\r\\n    function acceptPrescription(uint prescriptionId) external onlyPatient{\\r\\n        Prescription storage pres = prescriptions[prescriptionId];\\r\\n\\r\\n        if(pres.patient != msg.sender) {\\r\\n            revert PrescriptionNotForSender(pres.patient, msg.sender);\\r\\n        }\\r\\n\\r\\n        if(pres.accepted){\\r\\n            revert PrescriptionAlreadyAccepted(prescriptionId);\\r\\n        }\\r\\n\\r\\n        for(uint i=0;i<pres.medications.length;i++){\\r\\n            uint drugId = pres.medications[i].drugId;\\r\\n            if(activeDrug[msg.sender][drugId]){\\r\\n                revert DrugsAlreadyActive(drugId, msg.sender);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        pres.accepted = true;\\r\\n        for (uint i=0;i<pres.medications.length;i++){\\r\\n            uint drugId = pres.medications[i].drugId;\\r\\n            activeDrug[msg.sender][drugId] = true;\\r\\n            patientActiveDrugs[msg.sender].push(drugId);\\r\\n        }\\r\\n\\r\\n        emit PrescriptionAccepted(prescriptionId, msg.sender);\\r\\n    }\\r\\n\\r\\n    function _removeActiveDrug(address patient, uint drugId) internal{\\r\\n        uint[] storage drugs = patientActiveDrugs[patient];\\r\\n        for(uint i=0;i<drugs.length;i++){\\r\\n            if(drugs[i]==drugId){\\r\\n                drugs[i] = drugs[drugs.length-1];\\r\\n                drugs.pop();\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Ordering a Prescription\\r\\n\\r\\n    function orderPrescription(uint prescriptionId, address pharmacyAddress, bytes32 /* orderHash */) external onlyPatient {\\r\\n        Prescription storage pres = prescriptions[prescriptionId];\\r\\n        if(msg.sender != pres.patient){\\r\\n            revert PrescriptionNotForSender(msg.sender, pres.patient);\\r\\n        }\\r\\n        if(!pres.accepted){\\r\\n            revert PrescriptionNotAccepted(prescriptionId);\\r\\n        }\\r\\n        if(pres.ordered){\\r\\n            revert PrescriptionAlreadyOrdered(prescriptionId);\\r\\n        }\\r\\n        if(roles[pharmacyAddress] != Role.Pharmacy){\\r\\n            revert NotPharmacy(uint(roles[pharmacyAddress]), pharmacyAddress);\\r\\n        }\\r\\n\\r\\n        for(uint i=0;i<pres.medications.length;i++){\\r\\n            uint drugId = pres.medications[i].drugId;\\r\\n            uint requiredAmount = pres.medications[i].dosage * pres.medications[i].no_days;\\r\\n            if(inventory[pharmacyAddress][drugId].stock < requiredAmount){\\r\\n                revert NotEnoughDrugs(pharmacyAddress, prescriptionId, drugId);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        for(uint i=0;i<pres.medications.length;i++){\\r\\n            uint drugId = pres.medications[i].drugId;\\r\\n            uint requiredAmount = pres.medications[i].dosage * pres.medications[i].no_days;\\r\\n            inventory[pharmacyAddress][drugId].stock -= requiredAmount;\\r\\n            activeDrug[msg.sender][drugId] = false;\\r\\n            _removeActiveDrug(msg.sender, drugId);\\r\\n            pres.orderedMedications[i]=true;\\r\\n        }\\r\\n\\r\\n        pres.ordered = true;\\r\\n\\r\\n        emit OrderPlaced(prescriptionId, msg.sender, pharmacyAddress);\\r\\n    }\\r\\n\\r\\n    // function for ordering different drugs from different pharmacies - fuck you for making me write this shit. This shit is too stoopid\\r\\n    // gonna write param docs for this shit cause will be too confusing to understand\\r\\n    /// @param pharmacyAddresses Array of pharmacy addresses to order from.\\r\\n    /// @param medIndices A 2D array where each sub-array contains indices (in the prescription's medications array) to be ordered from the corresponding pharmacy.\\r\\n    /// @param orderHashes Array of hashes of order details (off-chain) for each pharmacy order.\\r\\n    function orderPrescriptionMultiPharmacy(uint prescriptionId, address[] calldata pharmacyAddresses, uint[][] calldata medIndices, bytes32[] calldata orderHashes) external onlyPatient{\\r\\n        Prescription storage pres = prescriptions[prescriptionId];\\r\\n\\r\\n        if(msg.sender != pres.patient){\\r\\n            revert PrescriptionNotForSender(msg.sender, pres.patient);\\r\\n        }\\r\\n\\r\\n        if(!pres.accepted){\\r\\n            revert PrescriptionNotAccepted(prescriptionId);\\r\\n        }\\r\\n\\r\\n        if(pharmacyAddresses.length != medIndices.length || pharmacyAddresses.length != orderHashes.length){\\r\\n            revert MismatchLengths();\\r\\n        }\\r\\n\\r\\n        for (uint i = 0; i < pharmacyAddresses.length; i++) {\\r\\n            address pharmacyAddr = pharmacyAddresses[i];\\r\\n\\r\\n            if(roles[pharmacyAddr] != Role.Pharmacy){\\r\\n                revert NotPharmacy(uint256(roles[pharmacyAddr]), pharmacyAddr);\\r\\n            }\\r\\n\\r\\n            uint[] calldata indices = medIndices[i];\\r\\n            uint presId = prescriptionId;\\r\\n            for (uint j = 0; j < indices.length; j++) {\\r\\n                uint medIndex = indices[j];\\r\\n\\r\\n                if(medIndex >= pres.medications.length) revert InvalidMedIndex(medIndex, pres.medications.length);\\r\\n                if(pres.orderedMedications[medIndex]) revert AlreadyOrdered(prescriptionId, medIndex);\\r\\n\\r\\n                uint drugId = pres.medications[medIndex].drugId;\\r\\n                uint requiredAmount = pres.medications[medIndex].dosage * pres.medications[medIndex].no_days;\\r\\n\\r\\n                if(inventory[pharmacyAddr][drugId].stock < requiredAmount) revert NotEnoughDrugs(pharmacyAddr, presId, drugId);\\r\\n                \\r\\n\\r\\n                inventory[pharmacyAddr][drugId].stock -= requiredAmount;\\r\\n\\r\\n                pres.orderedMedications[medIndex] = true;\\r\\n\\r\\n                activeDrug[msg.sender][drugId] = false;\\r\\n                _removeActiveDrug(msg.sender, drugId);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        emit MultiOrderPlaced(prescriptionId, msg.sender);\\r\\n    }\\r\\n\\r\\n    // Store hash off chain\\r\\n    // Active drugs - add keepers\\r\\n    // drug expiration date - add keeper\\r\\n\\r\\n    // store all pharmacies tick\\r\\n    // different drugs from different pharmacies tick\\r\\n    // all pharmacies tick\\r\\n    // all pharmacies which can satisfy prescription tick\\r\\n    // all patients of a doctor tick\\r\\n    // all prescriptions of patient tick\\r\\n    // all pending prescriptions - not approved / not doing, do this in front end, parse and get nigga\\r\\n    // all pending prescriptions - not ordered / not doing, do this in front end\\r\\n    // all prescriptions of doctor tick\\r\\n    // get all pharmacies tick\\r\\n    // get all pharmacies from id tick\\r\\n    // get inventory from pharmacy tick\\r\\n    // get active drugs tick\\r\\n\\r\\n    // Getter functions\\r\\n    \\r\\n    // All are self explanatory not writing docs\\r\\n\\r\\n    function getAllPharmacies() external view returns (address[] memory) {\\r\\n        return pharmacies;\\r\\n    }\\r\\n\\r\\n    function getPatientsOfDoctor(address doctor) external view returns (address[] memory) {\\r\\n        return doctorPatients[doctor];\\r\\n    }\\r\\n\\r\\n    function getPrescriptionsByDoctor(address doctor) external view returns (uint[] memory) {\\r\\n        return doctorPrescriptions[doctor];\\r\\n    }\\r\\n\\r\\n    function getPrescriptionsByPatient(address patient) external view returns (uint[] memory) {\\r\\n        return patientPrescriptions[patient];\\r\\n    }\\r\\n\\r\\n    function getPharmacyById(uint id) external view returns (address) {\\r\\n        if(id >= pharmacies.length) revert InvalidPharmacyId(id, pharmacies.length);\\r\\n        return pharmacies[id];\\r\\n    }\\r\\n\\r\\n    function getInventoryForPharmacy(address pharmacyAddr) external view returns (uint[] memory drugIds, uint[] memory stocks, uint[] memory expirations) {\\r\\n        uint len = pharmacyDrugIds[pharmacyAddr].length;\\r\\n        drugIds = new uint[](len);\\r\\n        stocks = new uint[](len);\\r\\n        expirations = new uint[](len);\\r\\n        \\r\\n        for (uint i = 0; i < len; i++) {\\r\\n            uint drugId = pharmacyDrugIds[pharmacyAddr][i];\\r\\n            drugIds[i] = drugId;\\r\\n            stocks[i] = inventory[pharmacyAddr][drugId].stock;\\r\\n            expirations[i] = inventory[pharmacyAddr][drugId].expiration;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getActiveDrugsOfPatient(address patient) external view returns (uint[] memory) {\\r\\n        return patientActiveDrugs[patient];\\r\\n    }\\r\\n\\r\\n}\",\"keccak256\":\"0x96d3e4223250b1b9c1bd239734967061e0246b4682e75c69b8c31f8ce2951fdd\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b506146a18061001f6000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80638a5acd73116100de578063aab1d13811610097578063e0acc69811610071578063e0acc69814610464578063f0544ad814610494578063f068e488146104b0578063f33465e4146104cc57610173565b8063aab1d138146103d2578063ca7c369014610402578063db03f2821461043257610173565b80638a5acd7314610312578063988559f51461034257806399374642146103725780639e634a7b146103a2578063a4fd673e146103ac578063a99ad4ee146103c857610173565b806368f222fd1161013057806368f222fd1461024f5780636ba7fe7f146102805780636cb876d01461028a578063742ccef0146102945780637afe24ef146102c457806382a7fa4a146102f457610173565b806331dfc91b1461017857806336cd6114146101af5780635cab3e27146101cb5780635dd5a6cc146101e75780635e228e4c1461021757806368e5a39c14610233575b600080fd5b610192600480360381019061018d919061380e565b6104ea565b6040516101a69897969594939291906138bf565b60405180910390f35b6101c960048036038101906101c49190613969565b6105ac565b005b6101e560048036038101906101e091906139d0565b61072f565b005b61020160048036038101906101fc9190613a23565b610913565b60405161020e9190613a50565b60405180910390f35b610231600480360381019061022c9190613b7c565b610933565b005b61024d60048036038101906102489190613c71565b6110e9565b005b61026960048036038101906102649190613cc4565b611817565b604051610277929190613d04565b60405180910390f35b610288611848565b005b610292611a5d565b005b6102ae60048036038101906102a99190613a23565b611c72565b6040516102bb9190613deb565b60405180910390f35b6102de60048036038101906102d9919061380e565b611d09565b6040516102eb9190613e0d565b60405180910390f35b6102fc611da1565b6040516103099190613e28565b60405180910390f35b61032c6004803603810190610327919061380e565b611da7565b6040516103399190613e0d565b60405180910390f35b61035c60048036038101906103579190613a23565b611de6565b6040516103699190613deb565b60405180910390f35b61038c60048036038101906103879190613a23565b611e7d565b6040516103999190613eba565b60405180910390f35b6103aa611e9d565b005b6103c660048036038101906103c1919061380e565b6121bf565b005b6103d0612667565b005b6103ec60048036038101906103e79190613cc4565b61287c565b6040516103f99190613a50565b60405180910390f35b61041c60048036038101906104179190613a23565b6128ab565b6040516104299190613f93565b60405180910390f35b61044c60048036038101906104479190613a23565b612978565b60405161045b93929190613fb5565b60405180910390f35b61047e60048036038101906104799190613a23565b612c2d565b60405161048b9190613deb565b60405180910390f35b6104ae60048036038101906104a99190614057565b612cc4565b005b6104ca60048036038101906104c59190614135565b6131d2565b005b6104d4613432565b6040516104e19190613f93565b60405180910390f35b60046020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060070154908060080160009054906101000a900460ff16908060080160019054906101000a900460ff16905088565b6004808111156105bf576105be613e43565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600481111561061d5761061c613e43565b5b1461065d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065490614246565b60405180910390fd5b81600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060000160008282546106c09190614295565b9250508190555080600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000206001018190555061072984846134c0565b50505050565b6003600481111561074357610742613e43565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660048111156107a1576107a0613e43565b5b14610842576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600481111561080457610803613e43565b5b336040517f07ffa9ef0000000000000000000000000000000000000000000000000000000081526004016108399291906142c9565b60405180910390fd5b81600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060000160008282546108a59190614295565b9250508190555080600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000206001018190555061090e33846134c0565b505050565b60026020528060005260406000206000915054906101000a900460ff1681565b6002600481111561094757610946613e43565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660048111156109a5576109a4613e43565b5b14610a46576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115610a0857610a07613e43565b5b336040517fad852b14000000000000000000000000000000000000000000000000000000008152600401610a3d9291906142c9565b60405180910390fd5b60006004600089815260200190815260200160002090508060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b1757338160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517f7be3ba3b000000000000000000000000000000000000000000000000000000008152600401610b0e9291906142f2565b60405180910390fd5b8060080160009054906101000a900460ff16610b6a57876040517f87c89179000000000000000000000000000000000000000000000000000000008152600401610b619190613e28565b60405180910390fd5b8484905087879050141580610b855750828290508787905014155b15610bbc576040517f8f6c6f4800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8787905081101561109a576000888883818110610bdf57610bde61431b565b5b9050602002016020810190610bf49190613a23565b905060036004811115610c0a57610c09613e43565b5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115610c6857610c67613e43565b5b14610d09576000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115610ccb57610cca613e43565b5b816040517f07ffa9ef000000000000000000000000000000000000000000000000000000008152600401610d009291906142c9565b60405180910390fd5b366000888885818110610d1f57610d1e61431b565b5b9050602002810190610d319190614359565b9150915060008c905060005b83839050811015611088576000848483818110610d5d57610d5c61431b565b5b90506020020135905087600501805490508110610dba578088600501805490506040517f51bd95c4000000000000000000000000000000000000000000000000000000008152600401610db1929190613d04565b60405180910390fd5b876006018181548110610dd057610dcf61431b565b5b90600052602060002090602091828204019190069054906101000a900460ff1615610e34578e816040517f085da392000000000000000000000000000000000000000000000000000000008152600401610e2b929190613d04565b60405180910390fd5b6000886005018281548110610e4c57610e4b61431b565b5b90600052602060002090600302016000015490506000896005018381548110610e7857610e7761431b565b5b9060005260206000209060030201600201548a6005018481548110610ea057610e9f61431b565b5b906000526020600020906003020160010154610ebc91906143bc565b905080600a60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020600001541015610f5a578785836040517ffe5bd782000000000000000000000000000000000000000000000000000000008152600401610f51939291906143fe565b60405180910390fd5b80600a60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206000016000828254610fbd9190614435565b9250508190555060018a6006018481548110610fdc57610fdb61431b565b5b90600052602060002090602091828204019190066101000a81548160ff0219169083151502179055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060006101000a81548160ff0219169083151502179055506110783383613582565b5050508080600101915050610d3d565b50505050508080600101915050610bbf565b503373ffffffffffffffffffffffffffffffffffffffff16887f62a40242259c3f2ceecd6e9e95c6aa192ea71b07ceb8cf5185512385c99d617260405160405180910390a35050505050505050565b600260048111156110fd576110fc613e43565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600481111561115b5761115a613e43565b5b146111fc576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660048111156111be576111bd613e43565b5b336040517fad852b140000000000000000000000000000000000000000000000000000000081526004016111f39291906142c9565b60405180910390fd5b60006004600085815260200190815260200160002090508060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112cd57338160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517f7be3ba3b0000000000000000000000000000000000000000000000000000000081526004016112c49291906142f2565b60405180910390fd5b8060080160009054906101000a900460ff1661132057836040517f87c891790000000000000000000000000000000000000000000000000000000081526004016113179190613e28565b60405180910390fd5b8060080160019054906101000a900460ff161561137457836040517f7cb7406800000000000000000000000000000000000000000000000000000000815260040161136b9190613e28565b60405180910390fd5b6003600481111561138857611387613e43565b5b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660048111156113e6576113e5613e43565b5b14611487576000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600481111561144957611448613e43565b5b836040517f07ffa9ef00000000000000000000000000000000000000000000000000000000815260040161147e9291906142c9565b60405180910390fd5b60005b81600501805490508110156115ce5760008260050182815481106114b1576114b061431b565b5b906000526020600020906003020160000154905060008360050183815481106114dd576114dc61431b565b5b9060005260206000209060030201600201548460050184815481106115055761150461431b565b5b90600052602060002090600302016001015461152191906143bc565b905080600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206000015410156115bf578587836040517ffe5bd7820000000000000000000000000000000000000000000000000000000081526004016115b6939291906143fe565b60405180910390fd5b5050808060010191505061148a565b5060005b81600501805490508110156117985760008260050182815481106115f9576115f861431b565b5b906000526020600020906003020160000154905060008360050183815481106116255761162461431b565b5b90600052602060002090600302016002015484600501848154811061164d5761164c61431b565b5b90600052602060002090600302016001015461166991906143bc565b905080600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060000160008282546116ce9190614435565b925050819055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060006101000a81548160ff0219169083151502179055506117483383613582565b60018460060184815481106117605761175f61431b565b5b90600052602060002090602091828204019190066101000a81548160ff021916908315150217905550505080806001019150506115d2565b5060018160080160016101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16857f4230a4fc42ebf80b234f0270f890fd6facf785b69f172b976895e3ba6aeb286660405160405180910390a450505050565b600a602052816000526040600020602052806000526040600020600091509150508060000154908060010154905082565b6000600481111561185c5761185b613e43565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660048111156118ba576118b9613e43565b5b1461195b57336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600481111561191e5761191d613e43565b5b6040517f4baa5977000000000000000000000000000000000000000000000000000000008152600401611952929190614469565b60405180910390fd5b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360048111156119bd576119bc613e43565b5b02179055503373ffffffffffffffffffffffffffffffffffffffff167f89b4e995568c900aa52376cbed225dc1a013c9a43cb58186d69676ff593d7c4e6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16604051611a539190613eba565b60405180910390a2565b60006004811115611a7157611a70613e43565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115611acf57611ace613e43565b5b14611b7057336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115611b3357611b32613e43565b5b6040517f4baa5977000000000000000000000000000000000000000000000000000000008152600401611b67929190614469565b60405180910390fd5b60046000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690836004811115611bd257611bd1613e43565b5b02179055503373ffffffffffffffffffffffffffffffffffffffff167f89b4e995568c900aa52376cbed225dc1a013c9a43cb58186d69676ff593d7c4e6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16604051611c689190613eba565b60405180910390a2565b6060600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611cfd57602002820191906000526020600020905b815481526020019060010190808311611ce9575b50505050509050919050565b60006001805490508210611d5b57816001805490506040517f2b87a07f000000000000000000000000000000000000000000000000000000008152600401611d52929190613d04565b60405180910390fd5b60018281548110611d6f57611d6e61431b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60035481565b60018181548110611db757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611e7157602002820191906000526020600020905b815481526020019060010190808311611e5d575b50505050509050919050565b60006020528060005260406000206000915054906101000a900460ff1681565b60006004811115611eb157611eb0613e43565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115611f0f57611f0e613e43565b5b14611fb057336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115611f7357611f72613e43565b5b6040517f4baa5977000000000000000000000000000000000000000000000000000000008152600401611fa7929190614469565b60405180910390fd5b60036000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083600481111561201257612011613e43565b5b02179055503373ffffffffffffffffffffffffffffffffffffffff167f89b4e995568c900aa52376cbed225dc1a013c9a43cb58186d69676ff593d7c4e6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166040516120a89190613eba565b60405180910390a2600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166121bd576001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b565b600260048111156121d3576121d2613e43565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600481111561223157612230613e43565b5b146122d2576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600481111561229457612293613e43565b5b336040517fad852b140000000000000000000000000000000000000000000000000000000081526004016122c99291906142c9565b60405180910390fd5b60006004600083815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146123a3578060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336040517f7be3ba3b00000000000000000000000000000000000000000000000000000000815260040161239a9291906142f2565b60405180910390fd5b8060080160009054906101000a900460ff16156123f757816040517fbd2622a30000000000000000000000000000000000000000000000000000000081526004016123ee9190613e28565b60405180910390fd5b60005b81600501805490508110156124e55760008260050182815481106124215761242061431b565b5b9060005260206000209060030201600001549050600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060009054906101000a900460ff16156124d75780336040517f748a74600000000000000000000000000000000000000000000000000000000081526004016124ce9291906142c9565b60405180910390fd5b5080806001019150506123fa565b5060018160080160006101000a81548160ff02191690831515021790555060005b816005018054905081101561261e57600082600501828154811061252d5761252c61431b565b5b90600052602060002090600302016000015490506001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff021916908315150217905550600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190915055508080600101915050612506565b503373ffffffffffffffffffffffffffffffffffffffff16827fde00084ab0cfbed100269c33cd062c3e925f6d8867dd7c9bd62b795c2ebbd67060405160405180910390a35050565b6000600481111561267b5761267a613e43565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660048111156126d9576126d8613e43565b5b1461277a57336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600481111561273d5761273c613e43565b5b6040517f4baa5977000000000000000000000000000000000000000000000000000000008152600401612771929190614469565b60405180910390fd5b60026000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360048111156127dc576127db613e43565b5b02179055503373ffffffffffffffffffffffffffffffffffffffff167f89b4e995568c900aa52376cbed225dc1a013c9a43cb58186d69676ff593d7c4e6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166040516128729190613eba565b60405180910390a2565b60056020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6060600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561296c57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612922575b50505050509050919050565b60608060606000600b60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905090508067ffffffffffffffff8111156129de576129dd614492565b5b604051908082528060200260200182016040528015612a0c5781602001602082028036833780820191505090505b5093508067ffffffffffffffff811115612a2957612a28614492565b5b604051908082528060200260200182016040528015612a575781602001602082028036833780820191505090505b5092508067ffffffffffffffff811115612a7457612a73614492565b5b604051908082528060200260200182016040528015612aa25781602001602082028036833780820191505090505b50915060005b81811015612c24576000600b60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110612b0357612b0261431b565b5b9060005260206000200154905080868381518110612b2457612b2361431b565b5b602002602001018181525050600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060000154858381518110612b9757612b9661431b565b5b602002602001018181525050600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060010154848381518110612c0a57612c0961431b565b5b602002602001018181525050508080600101915050612aa8565b50509193909250565b6060600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015612cb857602002820191906000526020600020905b815481526020019060010190808311612ca4575b50505050509050919050565b60016004811115612cd857612cd7613e43565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115612d3657612d35613e43565b5b14612dd7576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115612d9957612d98613e43565b5b336040517f027a40b0000000000000000000000000000000000000000000000000000000008152600401612dce9291906142c9565b60405180910390fd5b60026004811115612deb57612dea613e43565b5b6000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115612e4957612e48613e43565b5b14612e8b57846040517fbfc6c337000000000000000000000000000000000000000000000000000000008152600401612e829190613e0d565b60405180910390fd5b60036000815480929190612e9e906144c1565b9190505550600060046000600354815260200190815260200160002090506003548160000181905550338160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550858160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083816004018190555042816007018190555060008160080160006101000a81548160ff02191690831515021790555060008160080160016101000a81548160ff02191690831515021790555060005b8383905081101561309257816005018484838181106130015761300061431b565b5b9050606002019080600181540180825580915050600190039060005260206000209060030201600090919091909150818161303c919061462e565b505081600601600090806001815401808255809150506001900390600052602060002090602091828204019190069091909190916101000a81548160ff0219169083151502179055508080600101915050612fdf565b50600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003549080600181540180825580915050600190039060005260206000200160009091909190915055600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600354908060018154018082558091505060019003906000526020600020016000909190919091505561316d3387613686565b8573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff166003547f71d940cbfc82410e0b18e63896ef651239da8c4875128cfa30d1637278d0267060405160405180910390a4505050505050565b600360048111156131e6576131e5613e43565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600481111561324457613243613e43565b5b146132e5576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660048111156132a7576132a6613e43565b5b336040517f07ffa9ef0000000000000000000000000000000000000000000000000000000081526004016132dc9291906142c9565b60405180910390fd5b838390508686905014613324576040517f8f6c6f4800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b868690508110156134295760405180604001604052808686848181106133505761334f61431b565b5b90506020020135815260200184848481811061336f5761336e61431b565b5b90506020020135815250600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008989858181106133cd576133cc61431b565b5b905060200201358152602001908152602001600020600082015181600001556020820151816001015590505061341c338888848181106134105761340f61431b565b5b905060200201356134c0565b8080600101915050613327565b50505050505050565b606060018054806020026020016040519081016040528092919081815260200182805480156134b657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161346c575b5050505050905090565b6000600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000805b828054905081101561354d57838382815481106135275761352661431b565b5b906000526020600020015403613540576001915061354d565b8080600101915050613507565b508061357c57818390806001815401808255809150506001900390600052602060002001600090919091909150555b50505050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060005b818054905081101561368057828282815481106135e8576135e761431b565b5b90600052602060002001540361367357816001838054905061360a9190614435565b8154811061361b5761361a61431b565b5b90600052602060002001548282815481106136395761363861431b565b5b9060005260206000200181905550818054806136585761365761463c565b5b60019003818190600052602060002001600090559055613680565b80806001019150506135c8565b50505050565b600080600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060005b818054905081101561375f578373ffffffffffffffffffffffffffffffffffffffff168282815481106137035761370261431b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603613752576001925061375f565b80806001019150506136cd565b50816137c85780839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50505050565b600080fd5b600080fd5b6000819050919050565b6137eb816137d8565b81146137f657600080fd5b50565b600081359050613808816137e2565b92915050565b600060208284031215613824576138236137ce565b5b6000613832848285016137f9565b91505092915050565b613844816137d8565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006138758261384a565b9050919050565b6138858161386a565b82525050565b6000819050919050565b61389e8161388b565b82525050565b60008115159050919050565b6138b9816138a4565b82525050565b6000610100820190506138d5600083018b61383b565b6138e2602083018a61387c565b6138ef604083018961387c565b6138fc606083018861387c565b6139096080830187613895565b61391660a083018661383b565b61392360c08301856138b0565b61393060e08301846138b0565b9998505050505050505050565b6139468161386a565b811461395157600080fd5b50565b6000813590506139638161393d565b92915050565b60008060008060808587031215613983576139826137ce565b5b600061399187828801613954565b94505060206139a2878288016137f9565b93505060406139b3878288016137f9565b92505060606139c4878288016137f9565b91505092959194509250565b6000806000606084860312156139e9576139e86137ce565b5b60006139f7868287016137f9565b9350506020613a08868287016137f9565b9250506040613a19868287016137f9565b9150509250925092565b600060208284031215613a3957613a386137ce565b5b6000613a4784828501613954565b91505092915050565b6000602082019050613a6560008301846138b0565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112613a9057613a8f613a6b565b5b8235905067ffffffffffffffff811115613aad57613aac613a70565b5b602083019150836020820283011115613ac957613ac8613a75565b5b9250929050565b60008083601f840112613ae657613ae5613a6b565b5b8235905067ffffffffffffffff811115613b0357613b02613a70565b5b602083019150836020820283011115613b1f57613b1e613a75565b5b9250929050565b60008083601f840112613b3c57613b3b613a6b565b5b8235905067ffffffffffffffff811115613b5957613b58613a70565b5b602083019150836020820283011115613b7557613b74613a75565b5b9250929050565b60008060008060008060006080888a031215613b9b57613b9a6137ce565b5b6000613ba98a828b016137f9565b975050602088013567ffffffffffffffff811115613bca57613bc96137d3565b5b613bd68a828b01613a7a565b9650965050604088013567ffffffffffffffff811115613bf957613bf86137d3565b5b613c058a828b01613ad0565b9450945050606088013567ffffffffffffffff811115613c2857613c276137d3565b5b613c348a828b01613b26565b925092505092959891949750929550565b613c4e8161388b565b8114613c5957600080fd5b50565b600081359050613c6b81613c45565b92915050565b600080600060608486031215613c8a57613c896137ce565b5b6000613c98868287016137f9565b9350506020613ca986828701613954565b9250506040613cba86828701613c5c565b9150509250925092565b60008060408385031215613cdb57613cda6137ce565b5b6000613ce985828601613954565b9250506020613cfa858286016137f9565b9150509250929050565b6000604082019050613d19600083018561383b565b613d26602083018461383b565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b613d62816137d8565b82525050565b6000613d748383613d59565b60208301905092915050565b6000602082019050919050565b6000613d9882613d2d565b613da28185613d38565b9350613dad83613d49565b8060005b83811015613dde578151613dc58882613d68565b9750613dd083613d80565b925050600181019050613db1565b5085935050505092915050565b60006020820190508181036000830152613e058184613d8d565b905092915050565b6000602082019050613e22600083018461387c565b92915050565b6000602082019050613e3d600083018461383b565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60058110613e8357613e82613e43565b5b50565b6000819050613e9482613e72565b919050565b6000613ea482613e86565b9050919050565b613eb481613e99565b82525050565b6000602082019050613ecf6000830184613eab565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b613f0a8161386a565b82525050565b6000613f1c8383613f01565b60208301905092915050565b6000602082019050919050565b6000613f4082613ed5565b613f4a8185613ee0565b9350613f5583613ef1565b8060005b83811015613f86578151613f6d8882613f10565b9750613f7883613f28565b925050600181019050613f59565b5085935050505092915050565b60006020820190508181036000830152613fad8184613f35565b905092915050565b60006060820190508181036000830152613fcf8186613d8d565b90508181036020830152613fe38185613d8d565b90508181036040830152613ff78184613d8d565b9050949350505050565b60008083601f84011261401757614016613a6b565b5b8235905067ffffffffffffffff81111561403457614033613a70565b5b6020830191508360608202830111156140505761404f613a75565b5b9250929050565b600080600080600060808688031215614073576140726137ce565b5b600061408188828901613954565b955050602061409288828901613954565b94505060406140a388828901613c5c565b935050606086013567ffffffffffffffff8111156140c4576140c36137d3565b5b6140d088828901614001565b92509250509295509295909350565b60008083601f8401126140f5576140f4613a6b565b5b8235905067ffffffffffffffff81111561411257614111613a70565b5b60208301915083602082028301111561412e5761412d613a75565b5b9250929050565b60008060008060008060608789031215614152576141516137ce565b5b600087013567ffffffffffffffff8111156141705761416f6137d3565b5b61417c89828a016140df565b9650965050602087013567ffffffffffffffff81111561419f5761419e6137d3565b5b6141ab89828a016140df565b9450945050604087013567ffffffffffffffff8111156141ce576141cd6137d3565b5b6141da89828a016140df565b92509250509295509295509295565b600082825260208201905092915050565b7f556e617574686f72697a65640000000000000000000000000000000000000000600082015250565b6000614230600c836141e9565b915061423b826141fa565b602082019050919050565b6000602082019050818103600083015261425f81614223565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006142a0826137d8565b91506142ab836137d8565b92508282019050808211156142c3576142c2614266565b5b92915050565b60006040820190506142de600083018561383b565b6142eb602083018461387c565b9392505050565b6000604082019050614307600083018561387c565b614314602083018461387c565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126143765761437561434a565b5b80840192508235915067ffffffffffffffff8211156143985761439761434f565b5b6020830192506020820236038313156143b4576143b3614354565b5b509250929050565b60006143c7826137d8565b91506143d2836137d8565b92508282026143e0816137d8565b915082820484148315176143f7576143f6614266565b5b5092915050565b6000606082019050614413600083018661387c565b614420602083018561383b565b61442d604083018461383b565b949350505050565b6000614440826137d8565b915061444b836137d8565b925082820390508181111561446357614462614266565b5b92915050565b600060408201905061447e600083018561387c565b61448b602083018461383b565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006144cc826137d8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036144fe576144fd614266565b5b600182019050919050565b60008135614516816137e2565b80915050919050565b60008160001b9050919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6145588461451f565b9350801983169250808416831791505092915050565b6000819050919050565b600061459361458e614589846137d8565b61456e565b6137d8565b9050919050565b6000819050919050565b6145ad82614578565b6145c06145b98261459a565b835461452c565b8255505050565b6000810160008301806145d981614509565b90506145e581846145a4565b5050506001810160208301806145fa81614509565b905061460681846145a4565b50505060028101604083018061461b81614509565b905061462781846145a4565b5050505050565b61463882826145c7565b5050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea264697066735822122029f46105041bc94c7990ac83d81783bdd51958688dfdd4a6b9f479e9e3f98c5f64736f6c634300081c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101735760003560e01c80638a5acd73116100de578063aab1d13811610097578063e0acc69811610071578063e0acc69814610464578063f0544ad814610494578063f068e488146104b0578063f33465e4146104cc57610173565b8063aab1d138146103d2578063ca7c369014610402578063db03f2821461043257610173565b80638a5acd7314610312578063988559f51461034257806399374642146103725780639e634a7b146103a2578063a4fd673e146103ac578063a99ad4ee146103c857610173565b806368f222fd1161013057806368f222fd1461024f5780636ba7fe7f146102805780636cb876d01461028a578063742ccef0146102945780637afe24ef146102c457806382a7fa4a146102f457610173565b806331dfc91b1461017857806336cd6114146101af5780635cab3e27146101cb5780635dd5a6cc146101e75780635e228e4c1461021757806368e5a39c14610233575b600080fd5b610192600480360381019061018d919061380e565b6104ea565b6040516101a69897969594939291906138bf565b60405180910390f35b6101c960048036038101906101c49190613969565b6105ac565b005b6101e560048036038101906101e091906139d0565b61072f565b005b61020160048036038101906101fc9190613a23565b610913565b60405161020e9190613a50565b60405180910390f35b610231600480360381019061022c9190613b7c565b610933565b005b61024d60048036038101906102489190613c71565b6110e9565b005b61026960048036038101906102649190613cc4565b611817565b604051610277929190613d04565b60405180910390f35b610288611848565b005b610292611a5d565b005b6102ae60048036038101906102a99190613a23565b611c72565b6040516102bb9190613deb565b60405180910390f35b6102de60048036038101906102d9919061380e565b611d09565b6040516102eb9190613e0d565b60405180910390f35b6102fc611da1565b6040516103099190613e28565b60405180910390f35b61032c6004803603810190610327919061380e565b611da7565b6040516103399190613e0d565b60405180910390f35b61035c60048036038101906103579190613a23565b611de6565b6040516103699190613deb565b60405180910390f35b61038c60048036038101906103879190613a23565b611e7d565b6040516103999190613eba565b60405180910390f35b6103aa611e9d565b005b6103c660048036038101906103c1919061380e565b6121bf565b005b6103d0612667565b005b6103ec60048036038101906103e79190613cc4565b61287c565b6040516103f99190613a50565b60405180910390f35b61041c60048036038101906104179190613a23565b6128ab565b6040516104299190613f93565b60405180910390f35b61044c60048036038101906104479190613a23565b612978565b60405161045b93929190613fb5565b60405180910390f35b61047e60048036038101906104799190613a23565b612c2d565b60405161048b9190613deb565b60405180910390f35b6104ae60048036038101906104a99190614057565b612cc4565b005b6104ca60048036038101906104c59190614135565b6131d2565b005b6104d4613432565b6040516104e19190613f93565b60405180910390f35b60046020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060070154908060080160009054906101000a900460ff16908060080160019054906101000a900460ff16905088565b6004808111156105bf576105be613e43565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600481111561061d5761061c613e43565b5b1461065d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065490614246565b60405180910390fd5b81600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060000160008282546106c09190614295565b9250508190555080600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000206001018190555061072984846134c0565b50505050565b6003600481111561074357610742613e43565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660048111156107a1576107a0613e43565b5b14610842576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600481111561080457610803613e43565b5b336040517f07ffa9ef0000000000000000000000000000000000000000000000000000000081526004016108399291906142c9565b60405180910390fd5b81600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060000160008282546108a59190614295565b9250508190555080600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000206001018190555061090e33846134c0565b505050565b60026020528060005260406000206000915054906101000a900460ff1681565b6002600481111561094757610946613e43565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660048111156109a5576109a4613e43565b5b14610a46576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115610a0857610a07613e43565b5b336040517fad852b14000000000000000000000000000000000000000000000000000000008152600401610a3d9291906142c9565b60405180910390fd5b60006004600089815260200190815260200160002090508060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b1757338160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517f7be3ba3b000000000000000000000000000000000000000000000000000000008152600401610b0e9291906142f2565b60405180910390fd5b8060080160009054906101000a900460ff16610b6a57876040517f87c89179000000000000000000000000000000000000000000000000000000008152600401610b619190613e28565b60405180910390fd5b8484905087879050141580610b855750828290508787905014155b15610bbc576040517f8f6c6f4800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8787905081101561109a576000888883818110610bdf57610bde61431b565b5b9050602002016020810190610bf49190613a23565b905060036004811115610c0a57610c09613e43565b5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115610c6857610c67613e43565b5b14610d09576000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115610ccb57610cca613e43565b5b816040517f07ffa9ef000000000000000000000000000000000000000000000000000000008152600401610d009291906142c9565b60405180910390fd5b366000888885818110610d1f57610d1e61431b565b5b9050602002810190610d319190614359565b9150915060008c905060005b83839050811015611088576000848483818110610d5d57610d5c61431b565b5b90506020020135905087600501805490508110610dba578088600501805490506040517f51bd95c4000000000000000000000000000000000000000000000000000000008152600401610db1929190613d04565b60405180910390fd5b876006018181548110610dd057610dcf61431b565b5b90600052602060002090602091828204019190069054906101000a900460ff1615610e34578e816040517f085da392000000000000000000000000000000000000000000000000000000008152600401610e2b929190613d04565b60405180910390fd5b6000886005018281548110610e4c57610e4b61431b565b5b90600052602060002090600302016000015490506000896005018381548110610e7857610e7761431b565b5b9060005260206000209060030201600201548a6005018481548110610ea057610e9f61431b565b5b906000526020600020906003020160010154610ebc91906143bc565b905080600a60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020600001541015610f5a578785836040517ffe5bd782000000000000000000000000000000000000000000000000000000008152600401610f51939291906143fe565b60405180910390fd5b80600a60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206000016000828254610fbd9190614435565b9250508190555060018a6006018481548110610fdc57610fdb61431b565b5b90600052602060002090602091828204019190066101000a81548160ff0219169083151502179055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060006101000a81548160ff0219169083151502179055506110783383613582565b5050508080600101915050610d3d565b50505050508080600101915050610bbf565b503373ffffffffffffffffffffffffffffffffffffffff16887f62a40242259c3f2ceecd6e9e95c6aa192ea71b07ceb8cf5185512385c99d617260405160405180910390a35050505050505050565b600260048111156110fd576110fc613e43565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600481111561115b5761115a613e43565b5b146111fc576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660048111156111be576111bd613e43565b5b336040517fad852b140000000000000000000000000000000000000000000000000000000081526004016111f39291906142c9565b60405180910390fd5b60006004600085815260200190815260200160002090508060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112cd57338160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517f7be3ba3b0000000000000000000000000000000000000000000000000000000081526004016112c49291906142f2565b60405180910390fd5b8060080160009054906101000a900460ff1661132057836040517f87c891790000000000000000000000000000000000000000000000000000000081526004016113179190613e28565b60405180910390fd5b8060080160019054906101000a900460ff161561137457836040517f7cb7406800000000000000000000000000000000000000000000000000000000815260040161136b9190613e28565b60405180910390fd5b6003600481111561138857611387613e43565b5b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660048111156113e6576113e5613e43565b5b14611487576000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600481111561144957611448613e43565b5b836040517f07ffa9ef00000000000000000000000000000000000000000000000000000000815260040161147e9291906142c9565b60405180910390fd5b60005b81600501805490508110156115ce5760008260050182815481106114b1576114b061431b565b5b906000526020600020906003020160000154905060008360050183815481106114dd576114dc61431b565b5b9060005260206000209060030201600201548460050184815481106115055761150461431b565b5b90600052602060002090600302016001015461152191906143bc565b905080600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206000015410156115bf578587836040517ffe5bd7820000000000000000000000000000000000000000000000000000000081526004016115b6939291906143fe565b60405180910390fd5b5050808060010191505061148a565b5060005b81600501805490508110156117985760008260050182815481106115f9576115f861431b565b5b906000526020600020906003020160000154905060008360050183815481106116255761162461431b565b5b90600052602060002090600302016002015484600501848154811061164d5761164c61431b565b5b90600052602060002090600302016001015461166991906143bc565b905080600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060000160008282546116ce9190614435565b925050819055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060006101000a81548160ff0219169083151502179055506117483383613582565b60018460060184815481106117605761175f61431b565b5b90600052602060002090602091828204019190066101000a81548160ff021916908315150217905550505080806001019150506115d2565b5060018160080160016101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16857f4230a4fc42ebf80b234f0270f890fd6facf785b69f172b976895e3ba6aeb286660405160405180910390a450505050565b600a602052816000526040600020602052806000526040600020600091509150508060000154908060010154905082565b6000600481111561185c5761185b613e43565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660048111156118ba576118b9613e43565b5b1461195b57336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600481111561191e5761191d613e43565b5b6040517f4baa5977000000000000000000000000000000000000000000000000000000008152600401611952929190614469565b60405180910390fd5b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360048111156119bd576119bc613e43565b5b02179055503373ffffffffffffffffffffffffffffffffffffffff167f89b4e995568c900aa52376cbed225dc1a013c9a43cb58186d69676ff593d7c4e6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16604051611a539190613eba565b60405180910390a2565b60006004811115611a7157611a70613e43565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115611acf57611ace613e43565b5b14611b7057336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115611b3357611b32613e43565b5b6040517f4baa5977000000000000000000000000000000000000000000000000000000008152600401611b67929190614469565b60405180910390fd5b60046000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690836004811115611bd257611bd1613e43565b5b02179055503373ffffffffffffffffffffffffffffffffffffffff167f89b4e995568c900aa52376cbed225dc1a013c9a43cb58186d69676ff593d7c4e6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16604051611c689190613eba565b60405180910390a2565b6060600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611cfd57602002820191906000526020600020905b815481526020019060010190808311611ce9575b50505050509050919050565b60006001805490508210611d5b57816001805490506040517f2b87a07f000000000000000000000000000000000000000000000000000000008152600401611d52929190613d04565b60405180910390fd5b60018281548110611d6f57611d6e61431b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60035481565b60018181548110611db757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611e7157602002820191906000526020600020905b815481526020019060010190808311611e5d575b50505050509050919050565b60006020528060005260406000206000915054906101000a900460ff1681565b60006004811115611eb157611eb0613e43565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115611f0f57611f0e613e43565b5b14611fb057336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115611f7357611f72613e43565b5b6040517f4baa5977000000000000000000000000000000000000000000000000000000008152600401611fa7929190614469565b60405180910390fd5b60036000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083600481111561201257612011613e43565b5b02179055503373ffffffffffffffffffffffffffffffffffffffff167f89b4e995568c900aa52376cbed225dc1a013c9a43cb58186d69676ff593d7c4e6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166040516120a89190613eba565b60405180910390a2600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166121bd576001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b565b600260048111156121d3576121d2613e43565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600481111561223157612230613e43565b5b146122d2576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600481111561229457612293613e43565b5b336040517fad852b140000000000000000000000000000000000000000000000000000000081526004016122c99291906142c9565b60405180910390fd5b60006004600083815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146123a3578060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336040517f7be3ba3b00000000000000000000000000000000000000000000000000000000815260040161239a9291906142f2565b60405180910390fd5b8060080160009054906101000a900460ff16156123f757816040517fbd2622a30000000000000000000000000000000000000000000000000000000081526004016123ee9190613e28565b60405180910390fd5b60005b81600501805490508110156124e55760008260050182815481106124215761242061431b565b5b9060005260206000209060030201600001549050600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060009054906101000a900460ff16156124d75780336040517f748a74600000000000000000000000000000000000000000000000000000000081526004016124ce9291906142c9565b60405180910390fd5b5080806001019150506123fa565b5060018160080160006101000a81548160ff02191690831515021790555060005b816005018054905081101561261e57600082600501828154811061252d5761252c61431b565b5b90600052602060002090600302016000015490506001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff021916908315150217905550600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190915055508080600101915050612506565b503373ffffffffffffffffffffffffffffffffffffffff16827fde00084ab0cfbed100269c33cd062c3e925f6d8867dd7c9bd62b795c2ebbd67060405160405180910390a35050565b6000600481111561267b5761267a613e43565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660048111156126d9576126d8613e43565b5b1461277a57336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600481111561273d5761273c613e43565b5b6040517f4baa5977000000000000000000000000000000000000000000000000000000008152600401612771929190614469565b60405180910390fd5b60026000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360048111156127dc576127db613e43565b5b02179055503373ffffffffffffffffffffffffffffffffffffffff167f89b4e995568c900aa52376cbed225dc1a013c9a43cb58186d69676ff593d7c4e6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166040516128729190613eba565b60405180910390a2565b60056020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6060600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561296c57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612922575b50505050509050919050565b60608060606000600b60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905090508067ffffffffffffffff8111156129de576129dd614492565b5b604051908082528060200260200182016040528015612a0c5781602001602082028036833780820191505090505b5093508067ffffffffffffffff811115612a2957612a28614492565b5b604051908082528060200260200182016040528015612a575781602001602082028036833780820191505090505b5092508067ffffffffffffffff811115612a7457612a73614492565b5b604051908082528060200260200182016040528015612aa25781602001602082028036833780820191505090505b50915060005b81811015612c24576000600b60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110612b0357612b0261431b565b5b9060005260206000200154905080868381518110612b2457612b2361431b565b5b602002602001018181525050600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060000154858381518110612b9757612b9661431b565b5b602002602001018181525050600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060010154848381518110612c0a57612c0961431b565b5b602002602001018181525050508080600101915050612aa8565b50509193909250565b6060600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015612cb857602002820191906000526020600020905b815481526020019060010190808311612ca4575b50505050509050919050565b60016004811115612cd857612cd7613e43565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115612d3657612d35613e43565b5b14612dd7576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115612d9957612d98613e43565b5b336040517f027a40b0000000000000000000000000000000000000000000000000000000008152600401612dce9291906142c9565b60405180910390fd5b60026004811115612deb57612dea613e43565b5b6000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166004811115612e4957612e48613e43565b5b14612e8b57846040517fbfc6c337000000000000000000000000000000000000000000000000000000008152600401612e829190613e0d565b60405180910390fd5b60036000815480929190612e9e906144c1565b9190505550600060046000600354815260200190815260200160002090506003548160000181905550338160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550858160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083816004018190555042816007018190555060008160080160006101000a81548160ff02191690831515021790555060008160080160016101000a81548160ff02191690831515021790555060005b8383905081101561309257816005018484838181106130015761300061431b565b5b9050606002019080600181540180825580915050600190039060005260206000209060030201600090919091909150818161303c919061462e565b505081600601600090806001815401808255809150506001900390600052602060002090602091828204019190069091909190916101000a81548160ff0219169083151502179055508080600101915050612fdf565b50600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003549080600181540180825580915050600190039060005260206000200160009091909190915055600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600354908060018154018082558091505060019003906000526020600020016000909190919091505561316d3387613686565b8573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff166003547f71d940cbfc82410e0b18e63896ef651239da8c4875128cfa30d1637278d0267060405160405180910390a4505050505050565b600360048111156131e6576131e5613e43565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600481111561324457613243613e43565b5b146132e5576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660048111156132a7576132a6613e43565b5b336040517f07ffa9ef0000000000000000000000000000000000000000000000000000000081526004016132dc9291906142c9565b60405180910390fd5b838390508686905014613324576040517f8f6c6f4800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b868690508110156134295760405180604001604052808686848181106133505761334f61431b565b5b90506020020135815260200184848481811061336f5761336e61431b565b5b90506020020135815250600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008989858181106133cd576133cc61431b565b5b905060200201358152602001908152602001600020600082015181600001556020820151816001015590505061341c338888848181106134105761340f61431b565b5b905060200201356134c0565b8080600101915050613327565b50505050505050565b606060018054806020026020016040519081016040528092919081815260200182805480156134b657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161346c575b5050505050905090565b6000600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000805b828054905081101561354d57838382815481106135275761352661431b565b5b906000526020600020015403613540576001915061354d565b8080600101915050613507565b508061357c57818390806001815401808255809150506001900390600052602060002001600090919091909150555b50505050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060005b818054905081101561368057828282815481106135e8576135e761431b565b5b90600052602060002001540361367357816001838054905061360a9190614435565b8154811061361b5761361a61431b565b5b90600052602060002001548282815481106136395761363861431b565b5b9060005260206000200181905550818054806136585761365761463c565b5b60019003818190600052602060002001600090559055613680565b80806001019150506135c8565b50505050565b600080600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060005b818054905081101561375f578373ffffffffffffffffffffffffffffffffffffffff168282815481106137035761370261431b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603613752576001925061375f565b80806001019150506136cd565b50816137c85780839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50505050565b600080fd5b600080fd5b6000819050919050565b6137eb816137d8565b81146137f657600080fd5b50565b600081359050613808816137e2565b92915050565b600060208284031215613824576138236137ce565b5b6000613832848285016137f9565b91505092915050565b613844816137d8565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006138758261384a565b9050919050565b6138858161386a565b82525050565b6000819050919050565b61389e8161388b565b82525050565b60008115159050919050565b6138b9816138a4565b82525050565b6000610100820190506138d5600083018b61383b565b6138e2602083018a61387c565b6138ef604083018961387c565b6138fc606083018861387c565b6139096080830187613895565b61391660a083018661383b565b61392360c08301856138b0565b61393060e08301846138b0565b9998505050505050505050565b6139468161386a565b811461395157600080fd5b50565b6000813590506139638161393d565b92915050565b60008060008060808587031215613983576139826137ce565b5b600061399187828801613954565b94505060206139a2878288016137f9565b93505060406139b3878288016137f9565b92505060606139c4878288016137f9565b91505092959194509250565b6000806000606084860312156139e9576139e86137ce565b5b60006139f7868287016137f9565b9350506020613a08868287016137f9565b9250506040613a19868287016137f9565b9150509250925092565b600060208284031215613a3957613a386137ce565b5b6000613a4784828501613954565b91505092915050565b6000602082019050613a6560008301846138b0565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112613a9057613a8f613a6b565b5b8235905067ffffffffffffffff811115613aad57613aac613a70565b5b602083019150836020820283011115613ac957613ac8613a75565b5b9250929050565b60008083601f840112613ae657613ae5613a6b565b5b8235905067ffffffffffffffff811115613b0357613b02613a70565b5b602083019150836020820283011115613b1f57613b1e613a75565b5b9250929050565b60008083601f840112613b3c57613b3b613a6b565b5b8235905067ffffffffffffffff811115613b5957613b58613a70565b5b602083019150836020820283011115613b7557613b74613a75565b5b9250929050565b60008060008060008060006080888a031215613b9b57613b9a6137ce565b5b6000613ba98a828b016137f9565b975050602088013567ffffffffffffffff811115613bca57613bc96137d3565b5b613bd68a828b01613a7a565b9650965050604088013567ffffffffffffffff811115613bf957613bf86137d3565b5b613c058a828b01613ad0565b9450945050606088013567ffffffffffffffff811115613c2857613c276137d3565b5b613c348a828b01613b26565b925092505092959891949750929550565b613c4e8161388b565b8114613c5957600080fd5b50565b600081359050613c6b81613c45565b92915050565b600080600060608486031215613c8a57613c896137ce565b5b6000613c98868287016137f9565b9350506020613ca986828701613954565b9250506040613cba86828701613c5c565b9150509250925092565b60008060408385031215613cdb57613cda6137ce565b5b6000613ce985828601613954565b9250506020613cfa858286016137f9565b9150509250929050565b6000604082019050613d19600083018561383b565b613d26602083018461383b565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b613d62816137d8565b82525050565b6000613d748383613d59565b60208301905092915050565b6000602082019050919050565b6000613d9882613d2d565b613da28185613d38565b9350613dad83613d49565b8060005b83811015613dde578151613dc58882613d68565b9750613dd083613d80565b925050600181019050613db1565b5085935050505092915050565b60006020820190508181036000830152613e058184613d8d565b905092915050565b6000602082019050613e22600083018461387c565b92915050565b6000602082019050613e3d600083018461383b565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60058110613e8357613e82613e43565b5b50565b6000819050613e9482613e72565b919050565b6000613ea482613e86565b9050919050565b613eb481613e99565b82525050565b6000602082019050613ecf6000830184613eab565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b613f0a8161386a565b82525050565b6000613f1c8383613f01565b60208301905092915050565b6000602082019050919050565b6000613f4082613ed5565b613f4a8185613ee0565b9350613f5583613ef1565b8060005b83811015613f86578151613f6d8882613f10565b9750613f7883613f28565b925050600181019050613f59565b5085935050505092915050565b60006020820190508181036000830152613fad8184613f35565b905092915050565b60006060820190508181036000830152613fcf8186613d8d565b90508181036020830152613fe38185613d8d565b90508181036040830152613ff78184613d8d565b9050949350505050565b60008083601f84011261401757614016613a6b565b5b8235905067ffffffffffffffff81111561403457614033613a70565b5b6020830191508360608202830111156140505761404f613a75565b5b9250929050565b600080600080600060808688031215614073576140726137ce565b5b600061408188828901613954565b955050602061409288828901613954565b94505060406140a388828901613c5c565b935050606086013567ffffffffffffffff8111156140c4576140c36137d3565b5b6140d088828901614001565b92509250509295509295909350565b60008083601f8401126140f5576140f4613a6b565b5b8235905067ffffffffffffffff81111561411257614111613a70565b5b60208301915083602082028301111561412e5761412d613a75565b5b9250929050565b60008060008060008060608789031215614152576141516137ce565b5b600087013567ffffffffffffffff8111156141705761416f6137d3565b5b61417c89828a016140df565b9650965050602087013567ffffffffffffffff81111561419f5761419e6137d3565b5b6141ab89828a016140df565b9450945050604087013567ffffffffffffffff8111156141ce576141cd6137d3565b5b6141da89828a016140df565b92509250509295509295509295565b600082825260208201905092915050565b7f556e617574686f72697a65640000000000000000000000000000000000000000600082015250565b6000614230600c836141e9565b915061423b826141fa565b602082019050919050565b6000602082019050818103600083015261425f81614223565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006142a0826137d8565b91506142ab836137d8565b92508282019050808211156142c3576142c2614266565b5b92915050565b60006040820190506142de600083018561383b565b6142eb602083018461387c565b9392505050565b6000604082019050614307600083018561387c565b614314602083018461387c565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126143765761437561434a565b5b80840192508235915067ffffffffffffffff8211156143985761439761434f565b5b6020830192506020820236038313156143b4576143b3614354565b5b509250929050565b60006143c7826137d8565b91506143d2836137d8565b92508282026143e0816137d8565b915082820484148315176143f7576143f6614266565b5b5092915050565b6000606082019050614413600083018661387c565b614420602083018561383b565b61442d604083018461383b565b949350505050565b6000614440826137d8565b915061444b836137d8565b925082820390508181111561446357614462614266565b5b92915050565b600060408201905061447e600083018561387c565b61448b602083018461383b565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006144cc826137d8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036144fe576144fd614266565b5b600182019050919050565b60008135614516816137e2565b80915050919050565b60008160001b9050919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6145588461451f565b9350801983169250808416831791505092915050565b6000819050919050565b600061459361458e614589846137d8565b61456e565b6137d8565b9050919050565b6000819050919050565b6145ad82614578565b6145c06145b98261459a565b835461452c565b8255505050565b6000810160008301806145d981614509565b90506145e581846145a4565b5050506001810160208301806145fa81614509565b905061460681846145a4565b50505060028101604083018061461b81614509565b905061462781846145a4565b5050505050565b61463882826145c7565b5050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea264697066735822122029f46105041bc94c7990ac83d81783bdd51958688dfdd4a6b9f479e9e3f98c5f64736f6c634300081c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "orderPrescriptionMultiPharmacy(uint256,address[],uint256[][],bytes32[])": {
        "params": {
          "medIndices": "A 2D array where each sub-array contains indices (in the prescription's medications array) to be ordered from the corresponding pharmacy.",
          "orderHashes": "Array of hashes of order details (off-chain) for each pharmacy order.",
          "pharmacyAddresses": "Array of pharmacy addresses to order from."
        }
      },
      "setInventory(uint256[],uint256[],uint256[])": {
        "params": {
          "drugIds": "- array of drugIds",
          "stocks": "- stock for each drugId"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "acceptPrescription(uint256)": {
        "notice": "to accept a prescription"
      },
      "createPrescription(address,address,bytes32,(uint256,uint256,uint256)[])": {
        "notice": "create Prescription - Not writing param docs fuck you"
      },
      "registerAsDoctor()": {
        "notice": "All are external"
      },
      "setInventory(uint256[],uint256[],uint256[])": {
        "notice": "initialize the stock of the pharmacy for now"
      },
      "updateInventory(uint256,uint256,uint256)": {
        "notice": "update the inventroy of a stock"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 6134,
        "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
        "label": "roles",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_enum(Role)6129)"
      },
      {
        "astId": 6137,
        "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
        "label": "pharmacies",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 6141,
        "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
        "label": "isPharmacyRegistered",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 6249,
        "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
        "label": "prescriptionCounter",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 6254,
        "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
        "label": "prescriptions",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_struct(Prescription)6247_storage)"
      },
      {
        "astId": 6260,
        "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
        "label": "activeDrug",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
      },
      {
        "astId": 6265,
        "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
        "label": "patientActiveDrugs",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 6270,
        "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
        "label": "doctorPatients",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 6275,
        "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
        "label": "doctorPrescriptions",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 6280,
        "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
        "label": "patientPrescriptions",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 6292,
        "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
        "label": "inventory",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(InventoryItem)6285_storage))"
      },
      {
        "astId": 6297,
        "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
        "label": "pharmacyDrugIds",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bool)dyn_storage": {
        "base": "t_bool",
        "encoding": "dynamic_array",
        "label": "bool[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Medication)6223_storage)dyn_storage": {
        "base": "t_struct(Medication)6223_storage",
        "encoding": "dynamic_array",
        "label": "struct PrescriptionContract.Medication[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_enum(Role)6129": {
        "encoding": "inplace",
        "label": "enum PrescriptionContract.Role",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_enum(Role)6129)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => enum PrescriptionContract.Role)",
        "numberOfBytes": "32",
        "value": "t_enum(Role)6129"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_bool)"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_struct(InventoryItem)6285_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct PrescriptionContract.InventoryItem))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(InventoryItem)6285_storage)"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(InventoryItem)6285_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct PrescriptionContract.InventoryItem)",
        "numberOfBytes": "32",
        "value": "t_struct(InventoryItem)6285_storage"
      },
      "t_mapping(t_uint256,t_struct(Prescription)6247_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct PrescriptionContract.Prescription)",
        "numberOfBytes": "32",
        "value": "t_struct(Prescription)6247_storage"
      },
      "t_struct(InventoryItem)6285_storage": {
        "encoding": "inplace",
        "label": "struct PrescriptionContract.InventoryItem",
        "members": [
          {
            "astId": 6282,
            "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
            "label": "stock",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 6284,
            "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
            "label": "expiration",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Medication)6223_storage": {
        "encoding": "inplace",
        "label": "struct PrescriptionContract.Medication",
        "members": [
          {
            "astId": 6218,
            "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
            "label": "drugId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 6220,
            "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
            "label": "dosage",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 6222,
            "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
            "label": "no_days",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Prescription)6247_storage": {
        "encoding": "inplace",
        "label": "struct PrescriptionContract.Prescription",
        "members": [
          {
            "astId": 6225,
            "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 6227,
            "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
            "label": "doctor",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 6229,
            "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
            "label": "patient",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 6231,
            "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
            "label": "recommendedPharmacy",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 6233,
            "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
            "label": "detailsHash",
            "offset": 0,
            "slot": "4",
            "type": "t_bytes32"
          },
          {
            "astId": 6237,
            "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
            "label": "medications",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_struct(Medication)6223_storage)dyn_storage"
          },
          {
            "astId": 6240,
            "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
            "label": "orderedMedications",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_bool)dyn_storage"
          },
          {
            "astId": 6242,
            "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
            "label": "timestamp",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 6244,
            "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
            "label": "accepted",
            "offset": 0,
            "slot": "8",
            "type": "t_bool"
          },
          {
            "astId": 6246,
            "contract": "contracts/PrescriptionContract.sol:PrescriptionContract",
            "label": "ordered",
            "offset": 1,
            "slot": "8",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}